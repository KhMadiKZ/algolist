Content-Type: multipart/related; start=<op.mhtml.1270009195963.36d7bf592f672767@192.168.13.200>; boundary=----------bClPnHm6ovxBc9IieYYwoG
Content-Location: http://hardfire.far.ru/index.php?id=all_geom.htm
Subject: =?utf-8?Q?HardFire?=
MIME-Version: 1.0

------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=index.htm
Content-Type: text/html; charset=windows-1251; name=index.htm
Content-ID: <op.mhtml.1270009195963.36d7bf592f672767@192.168.13.200>
Content-Location: http://hardfire.far.ru/index.php?id=all_geom.htm
Content-Transfer-Encoding: 8bit


<base href="http://hardfire.far.ru/index.php">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>HardFire</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251" />
<meta http-equiv="pragma" content="no-cache" />
<meta name="Keywords" content="алгоритмы, геометрия, математика, теория графов, электронная библиотека, структуры данных" />
<meta name="robots" content="index,follow" />
<link href="/templates/css/style.css" rel="stylesheet" type="text/css" media="screen">
<link rel="stylesheet" type="text/css" href="templates/tpl2.css" />
</head>

<body id="body">

<div id="topheader">
<p><a href="index.php?id=_index.htm">
<img src="/templates/images/logo2.gif" alt="Fire" width="121" height="108" border="0" align="left">
<img src="/templates/images/logo2.gif" alt="Fire" width="121" height="108" border="0" align="right">
<img src="/templates/images/logo1.jpg" alt="HardFire" width="725" height="108" border="0" align="center">
</a></p>
</div>

<!-- Snow -->
<script src = "/hv2/templates/js/snow.js"></script>

<!-- ************* TOP LEISTE ************* -->
<div id="topbar"><select class="cp_quickfinder" name="select" onchange="eval(this.options[this.selectedIndex].value);">
<option>Быстрый переход</option>
<option>                           </option>
<option value="window.location.href = 'index.php?id=_index.htm'">&nbsp;&nbsp;&nbsp;&nbsp;&middot;&nbsp;Новости</option>
<option>                           </option>
<option value="window.location.href = 'index.php?id=hist.htm'">&nbsp;&nbsp;&nbsp;&nbsp;&middot;&nbsp;Архив</option>
<option>                           </option>
<option value="window.location.href = 'index.php?id=algorithm.htm'">&nbsp;&nbsp;&nbsp;&nbsp;&middot;&nbsp;Алгоритмы</option>
<option>                           </option>
<option value="window.location.href = 'index.php?id=ebooks.htm'">&nbsp;&nbsp;&nbsp;&nbsp;&middot;&nbsp;Электронная библиотека</option>
<option>                           </option>
<option value="window.location.href = 'index.php?id=soft.htm'">&nbsp;&nbsp;&nbsp;&nbsp;&middot;&nbsp;Наш soft</option></select></div>
<div id="container">
<!-- ************* LINKE SPALTE ************* -->
<div id="leftnavi">
<!-- ************* LINKE NAVIGATION ************* -->
<div style="position:relative">
<!-- Menu begin -->
<ul>
<li><a class="first_inactive" target="_self"  href="index.php?id=_index.htm">Новости</a></li>
<li><a class="first_inactive" target="_self"  href="index.php?id=hist.htm">Архив</a></li>
<li><a class="first_active"   target="_self"  href="index.php?id=algorithm.htm">Алгоритмы</a></li>
<li><a class="first_inactive" target="_self"  href="index.php?id=ebooks.htm">Электронная библиотека</a></li>
<li><a class="first_inactive" target="_self"  href="index.php?id=soft.htm">Наш soft</a></li>
</ul>
<br>
<!-- begin of Top100 logo -->
<a href="http://top100.rambler.ru/home?id=1978219" target="_blank"><img src="http://top100-images.rambler.ru/top100/b7.gif" alt="Rambler's Top100" width="88" height="31" border="0" /></a>
<!-- end of Top100 logo -->
<!-- Menu finish -->
</div>
<br>
<br>


<!--Rating@Mail.ru counter-->
<script language="javascript" type="text/javascript"><!--
d=document;var a='';a+=';r='+escape(d.referrer);js=10;//--></script>
<script language="javascript1.1" type="text/javascript"><!--
a+=';j='+navigator.javaEnabled();js=11;//--></script>
<script language="javascript1.2" type="text/javascript"><!--
s=screen;a+=';s='+s.width+'*'+s.height;
a+=';d='+(s.colorDepth?s.colorDepth:s.pixelDepth);js=12;//--></script>
<script language="javascript1.3" type="text/javascript"><!--
js=13;//--></script><script language="javascript" type="text/javascript"><!--
d.write('<a href="http://top.mail.ru/jump?from=1729990" target="_top">'+
'<img src="http://d5.c6.ba.a1.top.mail.ru/counter?id=1729990;t=135;js='+js+
a+';rand='+Math.random()+'" alt="Рейтинг@Mail.ru" border="0" '+
'height="40" width="88"><\/a>');if(11<js)d.write('<'+'!-- ');//--></script>
<noscript><a target="_top" href="http://top.mail.ru/jump?from=1729990">
<img src="http://d5.c6.ba.a1.top.mail.ru/counter?js=na;id=1729990;t=135" 
height="40" width="88" border="0" alt="Рейтинг@Mail.ru"></a></noscript>
<script language="javascript" type="text/javascript"><!--
if(11<js)d.write('--'+'>');//--></script>
<!--// Rating@Mail.ru counter-->

</div>
</div>

<!-- ************* begin ************* -->
<div id="content">
<br>
<span id="code">
<span id="col6">#include&nbsp;&lt;iostream&gt;<br></span>
<span id="col6">#include&nbsp;&lt;cmath&gt;<br></span>
<span id="col6">#include&nbsp;&lt;list&gt;<br></span>
<span id="col6">#include&nbsp;&lt;vector&gt;<br></span>
<span id="col6">#include&nbsp;&lt;algorithm&gt;<br></span>
<span id="col6">using</span>&nbsp;<span id="col6">namespace</span>&nbsp;std;<br>
<br>
<span id="col7">//&nbsp;Алгоритмы&nbsp;для&nbsp;работы&nbsp;с&nbsp;вычислительной&nbsp;геометрией<br></span>
<br>
<span id="col6">const</span>&nbsp;<span id="col6">double</span>&nbsp;eps&nbsp;=&nbsp;1e-8;<br>
<span id="col6">const</span>&nbsp;<span id="col6">double</span>&nbsp;pi&nbsp;=&nbsp;3.14159265358979323;<br>
<span id="col7">//&nbsp;наибольший&nbsp;общий&nbsp;делитель&nbsp;двух&nbsp;чисел<br></span>
<span id="col6">long</span>&nbsp;<span id="col6">long</span>&nbsp;gcd&nbsp;(<span id="col6">long</span>&nbsp;<span id="col6">long</span>&nbsp;a,&nbsp;<span id="col6">long</span>&nbsp;<span id="col6">long</span>&nbsp;b)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;(a&nbsp;&lt;&nbsp;0&nbsp;?&nbsp;-&nbsp;a&nbsp;:&nbsp;a);<br>
&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;(b&nbsp;&lt;&nbsp;0&nbsp;?&nbsp;-&nbsp;b&nbsp;:&nbsp;b);<br>
&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(a&nbsp;&amp;&amp;&nbsp;b)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(a&nbsp;&gt;&nbsp;b)&nbsp;a&nbsp;%=&nbsp;b;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;b&nbsp;%=&nbsp;a;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;a&nbsp;+&nbsp;b;<br>
}<br>
<br>
<span id="col7">//***********************&nbsp;Структуры&nbsp;данных&nbsp;************************************<br></span>
<span id="col7">//&nbsp;Точка<br></span>
<span id="col6">class</span>&nbsp;point<br>
{<br>
<span id="col6">public</span>:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;x,&nbsp;y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;дополнительный&nbsp;параметр&nbsp;-&nbsp;индекс&nbsp;точки<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Создание&nbsp;точки&nbsp;(_x,&nbsp;_y)<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;point(<span id="col6">double</span>&nbsp;_x,&nbsp;<span id="col6">double</span>&nbsp;_y)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x&nbsp;=&nbsp;_x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y&nbsp;=&nbsp;_y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Создание&nbsp;точки&nbsp;(0,&nbsp;0)<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;point()<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point(0,&nbsp;0);&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
};<br>
<br>
<span id="col7">//&nbsp;Прямая<br></span>
<span id="col6">class</span>&nbsp;line<br>
{<br>
<span id="col6">public</span>:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;a,&nbsp;b,&nbsp;c;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Создание&nbsp;прямой&nbsp;ax&nbsp;+&nbsp;by&nbsp;+&nbsp;c&nbsp;=&nbsp;0<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;line(<span id="col6">double</span>&nbsp;_a&nbsp;=&nbsp;0,&nbsp;<span id="col6">double</span>&nbsp;_b&nbsp;=&nbsp;0,&nbsp;<span id="col6">double</span>&nbsp;_c&nbsp;=&nbsp;0)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;=&nbsp;_a;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b&nbsp;=&nbsp;_b;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;=&nbsp;_c;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
};<br>
<span id="col6">class</span>&nbsp;circle<br>
{<br>
<span id="col6">public</span>:&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;c;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;r;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Дополнительные&nbsp;данные<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;alpha;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Создание&nbsp;окружности&nbsp;с&nbsp;центром&nbsp;(x,&nbsp;y)&nbsp;и&nbsp;радиусом&nbsp;_r<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;circle&nbsp;(<span id="col6">double</span>&nbsp;x,&nbsp;<span id="col6">double</span>&nbsp;y,&nbsp;<span id="col6">double</span>&nbsp;_r)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;=&nbsp;point(x,&nbsp;y);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;_r;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Создание&nbsp;окружности&nbsp;с&nbsp;центром&nbsp;p&nbsp;и&nbsp;радиусом&nbsp;_r<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;circle&nbsp;(point&nbsp;p,&nbsp;<span id="col6">double</span>&nbsp;_r)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;=&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;_r;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;circle&nbsp;()<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle(0,&nbsp;0,&nbsp;0);<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
};<br>
<span id="col7">//&nbsp;сравнение&nbsp;двух&nbsp;точек&nbsp;по&nbsp;принципу&nbsp;самая&nbsp;нижняя&nbsp;из&nbsp;самых&nbsp;левых<br></span>
<span id="col6">class</span>&nbsp;less_of_posXY<br>
{<br>
<span id="col6">public</span>&nbsp;:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;operator&nbsp;()&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(a.x&nbsp;-&nbsp;b.x)&nbsp;&gt;&nbsp;eps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;a.x&nbsp;&lt;&nbsp;b.x;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(a.y&nbsp;-&nbsp;b.y)&nbsp;&lt;=&nbsp;eps)&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;a.y&nbsp;&lt;&nbsp;b.y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
};<br>
<span id="col7">//&nbsp;равенство&nbsp;двух&nbsp;точек<br></span>
<span id="col6">class</span>&nbsp;equal_point&nbsp;<br>
{<br>
<span id="col6">public</span>&nbsp;:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;operator&nbsp;()&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;abs&nbsp;(a.x&nbsp;-&nbsp;b.x)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;abs&nbsp;(a.y&nbsp;-&nbsp;b.y)&nbsp;&lt;=&nbsp;eps;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
};<br>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//***********************&nbsp;Функции&nbsp;для&nbsp;работы&nbsp;с&nbsp;точками&nbsp;************************<br></span>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//&nbsp;расстояние&nbsp;между&nbsp;двумя&nbsp;точками<br></span>
<span id="col6">double</span>&nbsp;dist(point&nbsp;a,&nbsp;point&nbsp;b)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;sqrt((a.x&nbsp;-&nbsp;b.x)&nbsp;*&nbsp;(a.x&nbsp;-&nbsp;b.x)&nbsp;+&nbsp;(a.y&nbsp;-&nbsp;b.y)&nbsp;*&nbsp;(a.y&nbsp;-&nbsp;b.y));<br>
}<br>
<span id="col7">//&nbsp;лежит&nbsp;ли&nbsp;точка&nbsp;в&nbsp;прямоугольнике,&nbsp;который&nbsp;образуют&nbsp;заданные&nbsp;точки<br></span>
<span id="col6">bool</span>&nbsp;point_in_box&nbsp;(point&nbsp;t,&nbsp;point&nbsp;p1,&nbsp;point&nbsp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;&nbsp;(abs&nbsp;(t.x&nbsp;-&nbsp;min(p1.x,&nbsp;p2.x))&nbsp;&lt;=&nbsp;eps&nbsp;||&nbsp;min(p1.x,&nbsp;p2.x)&nbsp;&lt;=&nbsp;t.x)&nbsp;&amp;&amp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(abs&nbsp;(max(p1.x,&nbsp;p2.x)&nbsp;-&nbsp;t.x)&nbsp;&lt;=&nbsp;eps&nbsp;||&nbsp;max(p1.x,&nbsp;p2.x)&nbsp;&gt;=&nbsp;t.x)&nbsp;&amp;&amp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(abs&nbsp;(t.y&nbsp;-&nbsp;min(p1.y,&nbsp;p2.y))&nbsp;&lt;=&nbsp;eps&nbsp;||&nbsp;min(p1.y,&nbsp;p2.y)&nbsp;&lt;=&nbsp;t.y)&nbsp;&amp;&amp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(abs&nbsp;(max(p1.y,&nbsp;p2.y)&nbsp;-&nbsp;t.y)&nbsp;&lt;=&nbsp;eps&nbsp;||&nbsp;max(p1.y,&nbsp;p2.y)&nbsp;&gt;=&nbsp;t.y);<br>
}<br>
<span id="col7">//&nbsp;наиболее&nbsp;левая&nbsp;из&nbsp;двух&nbsp;точек<br></span>
point&nbsp;min_px&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;a.x&nbsp;&lt;&nbsp;b.x&nbsp;||&nbsp;(abs&nbsp;(a.x&nbsp;-&nbsp;b.x)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;a.y&nbsp;&lt;&nbsp;b.y)&nbsp;?&nbsp;a&nbsp;:&nbsp;b;<br>
}<br>
<span id="col7">//&nbsp;наиболее&nbsp;правая&nbsp;из&nbsp;двух&nbsp;точек<br></span>
point&nbsp;max_px&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;a.x&nbsp;&gt;&nbsp;b.x&nbsp;||&nbsp;(abs&nbsp;(a.x&nbsp;-&nbsp;b.x)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;a.y&nbsp;&gt;&nbsp;b.y)&nbsp;?&nbsp;a&nbsp;:&nbsp;b;<br>
}<br>
<span id="col7">//&nbsp;наиболее&nbsp;низкая&nbsp;из&nbsp;двух&nbsp;точек<br></span>
point&nbsp;min_py&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;a.y&nbsp;&lt;&nbsp;b.y&nbsp;||&nbsp;(abs&nbsp;(a.y&nbsp;-&nbsp;b.y)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;a.x&nbsp;&lt;&nbsp;b.x)&nbsp;?&nbsp;a&nbsp;:&nbsp;b;<br>
}<br>
<span id="col7">//&nbsp;наиболее&nbsp;высокая&nbsp;из&nbsp;двух&nbsp;точек<br></span>
point&nbsp;max_py&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;a.y&nbsp;&gt;&nbsp;b.y&nbsp;||&nbsp;(abs&nbsp;(a.y&nbsp;-&nbsp;b.y)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;a.x&nbsp;&gt;&nbsp;b.x)&nbsp;?&nbsp;a&nbsp;:&nbsp;b;<br>
}<br>
<br>
<span id="col7">//&nbsp;полярный&nbsp;угол&nbsp;точки<br></span>
<span id="col6">double</span>&nbsp;polar_angle&nbsp;(point&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;alpha&nbsp;=&nbsp;atan2(p.y,&nbsp;p.x);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(alpha&nbsp;&lt;&nbsp;0)&nbsp;alpha&nbsp;+=&nbsp;2&nbsp;*&nbsp;pi;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;alpha;<br>
}<br>
<span id="col7">//&nbsp;полярное&nbsp;расстояние<br></span>
<span id="col6">double</span>&nbsp;polar_dist&nbsp;(<span id="col6">double</span>&nbsp;alpha,&nbsp;<span id="col6">double</span>&nbsp;r1,&nbsp;<span id="col6">double</span>&nbsp;betta,&nbsp;<span id="col6">double</span>&nbsp;r2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;p1&nbsp;=&nbsp;point&nbsp;(r1&nbsp;*&nbsp;cos&nbsp;(alpha),&nbsp;r1&nbsp;*&nbsp;sin&nbsp;(alpha));<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;p2&nbsp;=&nbsp;point&nbsp;(r2&nbsp;*&nbsp;cos&nbsp;(betta),&nbsp;r2&nbsp;*&nbsp;sin&nbsp;(betta));<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;dist&nbsp;(p1,&nbsp;p2);<br>
}<br>
<span id="col7">//&nbsp;отрезки&nbsp;::&nbsp;деление&nbsp;отрезка&nbsp;в&nbsp;заданном&nbsp;отношении<br></span>
point&nbsp;part_segment&nbsp;(point&nbsp;p1,&nbsp;point&nbsp;p2,&nbsp;<span id="col6">double</span>&nbsp;m,&nbsp;<span id="col6">double</span>&nbsp;n)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;t;<br>
&nbsp;&nbsp;&nbsp;&nbsp;t.x&nbsp;=&nbsp;(p1.x&nbsp;*&nbsp;n&nbsp;+&nbsp;p2.x&nbsp;*&nbsp;m)&nbsp;/&nbsp;(m&nbsp;+&nbsp;n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;t.y&nbsp;=&nbsp;(p1.y&nbsp;*&nbsp;n&nbsp;+&nbsp;p2.y&nbsp;*&nbsp;m)&nbsp;/&nbsp;(m&nbsp;+&nbsp;n);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;t;<br>
}<br>
<span id="col7">//&nbsp;поворот&nbsp;точки&nbsp;на&nbsp;заданный&nbsp;угол&nbsp;вокруг&nbsp;начала&nbsp;координат<br></span>
point&nbsp;turn&nbsp;(point&nbsp;p,&nbsp;<span id="col6">double</span>&nbsp;alpha)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;c&nbsp;=&nbsp;cos(alpha);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;s&nbsp;=&nbsp;sin(alpha);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;point&nbsp;(p.x&nbsp;*&nbsp;c&nbsp;-&nbsp;p.y&nbsp;*&nbsp;s,&nbsp;p.x&nbsp;*&nbsp;s&nbsp;+&nbsp;p.y&nbsp;*&nbsp;c);<br>
}<br>
<span id="col7">//&nbsp;поворот&nbsp;точки&nbsp;на&nbsp;заданный&nbsp;угол&nbsp;вокруг&nbsp;заданной&nbsp;точки<br></span>
point&nbsp;turn_of&nbsp;(point&nbsp;p,&nbsp;<span id="col6">double</span>&nbsp;alpha,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;t&nbsp;=&nbsp;turn&nbsp;(point&nbsp;(p.x&nbsp;-&nbsp;c.x,&nbsp;p.y&nbsp;-&nbsp;c.y),&nbsp;alpha);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;point&nbsp;(t.x&nbsp;+&nbsp;c.x,&nbsp;t.y&nbsp;+&nbsp;c.y);<br>
}<br>
<span id="col7">//&nbsp;добавление&nbsp;заданной&nbsp;части&nbsp;вектора&nbsp;к&nbsp;точке<br></span>
point&nbsp;add_vector&nbsp;(point&nbsp;p,&nbsp;point&nbsp;p1,&nbsp;point&nbsp;p2,&nbsp;<span id="col6">double</span>&nbsp;k)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;point&nbsp;(p.x&nbsp;+&nbsp;(p2.x&nbsp;-&nbsp;p1.x)&nbsp;*&nbsp;k,&nbsp;p.y&nbsp;+&nbsp;(p2.y&nbsp;-&nbsp;p1.y)&nbsp;*&nbsp;k);<br>
}<br>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//***********************&nbsp;Функции&nbsp;для&nbsp;работы&nbsp;с&nbsp;прямыми&nbsp;************************<br></span>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//&nbsp;уравнение&nbsp;прямой,&nbsp;проходящей&nbsp;через&nbsp;две&nbsp;точки<br></span>
line&nbsp;toline&nbsp;(point&nbsp;p1,&nbsp;point&nbsp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;a&nbsp;=&nbsp;p2.y&nbsp;-&nbsp;p1.y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;b&nbsp;=&nbsp;p1.x&nbsp;-&nbsp;p2.x;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;line(a,&nbsp;b,&nbsp;-&nbsp;a&nbsp;*&nbsp;p1.x&nbsp;-&nbsp;b&nbsp;*&nbsp;p1.y);<br>
}<br>
<span id="col7">//&nbsp;знак&nbsp;точки&nbsp;при&nbsp;подставлении&nbsp;в&nbsp;уравнение&nbsp;прямой<br></span>
<span id="col6">int</span>&nbsp;point_in_line&nbsp;(line&nbsp;l,&nbsp;point&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;s&nbsp;=&nbsp;l.a&nbsp;*&nbsp;p.x&nbsp;+&nbsp;l.b&nbsp;*&nbsp;p.y&nbsp;+&nbsp;l.c;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;s&nbsp;&lt;&nbsp;-&nbsp;eps&nbsp;?&nbsp;-&nbsp;1&nbsp;:&nbsp;s&nbsp;&gt;&nbsp;eps&nbsp;?&nbsp;1&nbsp;:&nbsp;0;<br>
}<br>
<span id="col7">//&nbsp;параллельны&nbsp;ли&nbsp;прямые?<br></span>
<span id="col6">bool</span>&nbsp;is_parallel_line&nbsp;(line&nbsp;l1,&nbsp;line&nbsp;l2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;abs&nbsp;(l1.a&nbsp;*&nbsp;l2.b&nbsp;-&nbsp;l2.a&nbsp;*&nbsp;l1.b)&nbsp;&lt;=&nbsp;eps;<br>
}<br>
<span id="col7">//&nbsp;совпадают&nbsp;ли&nbsp;прямые?<br></span>
<span id="col6">bool</span>&nbsp;is_equal_line&nbsp;(line&nbsp;l1,&nbsp;line&nbsp;l2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;abs&nbsp;(l1.a&nbsp;*&nbsp;l2.b&nbsp;-&nbsp;l2.a&nbsp;*&nbsp;l1.b)&nbsp;&lt;=&nbsp;eps;&nbsp;&amp;&amp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abs&nbsp;(l1.a&nbsp;*&nbsp;l2.c&nbsp;-&nbsp;l2.a&nbsp;*&nbsp;l1.c)&nbsp;&lt;=&nbsp;eps;&nbsp;&amp;&amp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abs&nbsp;(l1.b&nbsp;*&nbsp;l2.c&nbsp;-&nbsp;l2.b&nbsp;*&nbsp;l1.c)&nbsp;&lt;=&nbsp;eps;<br>
}<br>
<span id="col7">//&nbsp;пересечение&nbsp;двух&nbsp;прямых<br></span>
<span id="col6">int</span>&nbsp;cross_line&nbsp;(line&nbsp;l1,&nbsp;line&nbsp;l2,&nbsp;point&nbsp;&amp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(is_equal_line&nbsp;(l1,&nbsp;l2))&nbsp;<span id="col6">return</span>&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(is_parallel_line&nbsp;(l1,&nbsp;l2))&nbsp;<span id="col6">return</span>&nbsp;0;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;p.x&nbsp;=&nbsp;(l2.b&nbsp;*&nbsp;l1.c&nbsp;-&nbsp;l1.b&nbsp;*&nbsp;l2.c)&nbsp;/&nbsp;(l2.a&nbsp;*&nbsp;l1.b&nbsp;-&nbsp;l1.a&nbsp;*&nbsp;l2.b);<br>
&nbsp;&nbsp;&nbsp;&nbsp;p.y&nbsp;=&nbsp;(l1.b&nbsp;!=&nbsp;0&nbsp;?&nbsp;(-&nbsp;l1.c&nbsp;-&nbsp;l1.a&nbsp;*&nbsp;p.x)&nbsp;/&nbsp;l1.b&nbsp;:&nbsp;(-&nbsp;l2.c&nbsp;-&nbsp;l2.a&nbsp;*&nbsp;p.x)&nbsp;/&nbsp;l2.b);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;1;<br>
}<br>
<span id="col7">//&nbsp;перпендикуляр&nbsp;к&nbsp;прямой,&nbsp;проходящий&nbsp;через&nbsp;заданную&nbsp;точку<br></span>
line&nbsp;perp_line&nbsp;(line&nbsp;l,&nbsp;point&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;line&nbsp;(l.b,&nbsp;-&nbsp;l.a,&nbsp;-&nbsp;l.b&nbsp;*&nbsp;p.x&nbsp;+&nbsp;l.a&nbsp;*&nbsp;p.y);<br>
}<br>
<span id="col7">//&nbsp;проекция&nbsp;точки&nbsp;на&nbsp;прямую<br></span>
point&nbsp;closest_point&nbsp;(line&nbsp;l,&nbsp;point&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;k&nbsp;=&nbsp;(l.a&nbsp;*&nbsp;p.x&nbsp;+&nbsp;l.b&nbsp;*&nbsp;p.y&nbsp;+&nbsp;l.c)&nbsp;/&nbsp;(l.a&nbsp;*&nbsp;l.a&nbsp;+&nbsp;l.b&nbsp;*&nbsp;l.b);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;point&nbsp;(p.x&nbsp;-&nbsp;l.a&nbsp;*&nbsp;k,&nbsp;p.y&nbsp;-&nbsp;l.b&nbsp;*&nbsp;k);<br>
}<br>
<span id="col7">//&nbsp;расстояние&nbsp;от&nbsp;точки&nbsp;до&nbsp;прямой<br></span>
<span id="col6">double</span>&nbsp;dist_point_to_line&nbsp;(point&nbsp;p,&nbsp;line&nbsp;l)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;abs((l.a&nbsp;*&nbsp;p.x&nbsp;+&nbsp;l.b&nbsp;*&nbsp;p.y&nbsp;+&nbsp;l.c)&nbsp;/&nbsp;sqrt(l.a&nbsp;*&nbsp;l.a&nbsp;+&nbsp;l.b&nbsp;*&nbsp;l.b));<br>
}<br>
<span id="col7">//&nbsp;прямая&nbsp;параллельная&nbsp;данной&nbsp;и&nbsp;лежащая&nbsp;на&nbsp;расстоянии&nbsp;d&nbsp;от&nbsp;неё<br></span>
line&nbsp;parallel_line_of_dist&nbsp;(line&nbsp;l,&nbsp;<span id="col6">double</span>&nbsp;d)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;line&nbsp;(l.a,&nbsp;l.b,&nbsp;l.c&nbsp;-&nbsp;d&nbsp;*&nbsp;sqrt&nbsp;(l.a&nbsp;*&nbsp;l.a&nbsp;+&nbsp;l.b&nbsp;*&nbsp;l.b));<br>
}<br>
<span id="col7">//&nbsp;расстояние&nbsp;между&nbsp;параллельными&nbsp;прямыми<br></span>
<span id="col6">double</span>&nbsp;dist_between_line&nbsp;(line&nbsp;l1,&nbsp;line&nbsp;l2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;abs&nbsp;(l1.c&nbsp;-&nbsp;l2.c)&nbsp;/&nbsp;sqrt&nbsp;(l1.a&nbsp;*&nbsp;l1.a&nbsp;+&nbsp;l2.b&nbsp;*&nbsp;l2.b);<br>
}<br>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//***********************&nbsp;Функции&nbsp;для&nbsp;работы&nbsp;с&nbsp;отрезками&nbsp;**********************<br></span>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//&nbsp;принадлежит&nbsp;ли&nbsp;точка&nbsp;на&nbsp;отрезку?<br></span>
<span id="col6">bool</span>&nbsp;point_in_segment&nbsp;(point&nbsp;t,&nbsp;point&nbsp;p1,&nbsp;point&nbsp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;a&nbsp;=&nbsp;p2.y&nbsp;-&nbsp;p1.y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;b&nbsp;=&nbsp;p1.x&nbsp;-&nbsp;p2.x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;c&nbsp;=&nbsp;-&nbsp;a&nbsp;*&nbsp;p1.x&nbsp;-&nbsp;b&nbsp;*&nbsp;p1.y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs(a&nbsp;*&nbsp;t.x&nbsp;+&nbsp;b&nbsp;*&nbsp;t.y&nbsp;+&nbsp;c)&nbsp;&gt;&nbsp;eps)&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;point_in_box&nbsp;(t,&nbsp;p1,&nbsp;p2);<br>
}<br>
<br>
<span id="col7">//&nbsp;пересекаются&nbsp;ли&nbsp;отрезки?<br></span>
<span id="col6">bool</span>&nbsp;is_cross_segment&nbsp;(point&nbsp;p1,&nbsp;point&nbsp;p2,&nbsp;point&nbsp;p3,&nbsp;point&nbsp;p4)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;l1&nbsp;=&nbsp;toline(p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;l2&nbsp;=&nbsp;toline(p3,&nbsp;p4);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;sign1&nbsp;=&nbsp;point_in_line(l1,&nbsp;p3)&nbsp;*&nbsp;point_in_line(l1,&nbsp;p4);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;sign2&nbsp;=&nbsp;point_in_line(l2,&nbsp;p1)&nbsp;*&nbsp;point_in_line(l2,&nbsp;p2);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs(sign1)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;abs(sign2)&nbsp;&lt;=&nbsp;eps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;point_in_box(p1,&nbsp;p3,&nbsp;p4)&nbsp;||&nbsp;point_in_box(p2,&nbsp;p3,&nbsp;p4)&nbsp;||<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point_in_box(p3,&nbsp;p1,&nbsp;p2)&nbsp;||&nbsp;point_in_box(p4,&nbsp;p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;sign1&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;sign2&nbsp;&lt;=&nbsp;eps;<br>
}<br>
<span id="col7">//&nbsp;пересечение&nbsp;отрезков<br></span>
<span id="col6">bool</span>&nbsp;cross_segment&nbsp;(point&nbsp;p1,&nbsp;point&nbsp;p2,&nbsp;point&nbsp;p3,&nbsp;point&nbsp;p4,&nbsp;point&nbsp;&amp;t)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Строим&nbsp;прямые&nbsp;проходящие&nbsp;через&nbsp;эти&nbsp;отрезки&nbsp;и&nbsp;пересекаем&nbsp;их<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;l1&nbsp;=&nbsp;toline(p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;l2&nbsp;=&nbsp;toline(p3,&nbsp;p4);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;cross_line(l1,&nbsp;l2,&nbsp;t);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;0)&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Если&nbsp;прямые&nbsp;совпадают,&nbsp;проверяем&nbsp;каждый&nbsp;конец&nbsp;отрезка&nbsp;на&nbsp;принадлежность&nbsp;другому&nbsp;отрезку<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_box&nbsp;(p1,&nbsp;p3,&nbsp;p4))&nbsp;{&nbsp;t&nbsp;=&nbsp;p1;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_box&nbsp;(p2,&nbsp;p3,&nbsp;p4))&nbsp;{&nbsp;t&nbsp;=&nbsp;p2;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_box&nbsp;(p3,&nbsp;p1,&nbsp;p2))&nbsp;{&nbsp;t&nbsp;=&nbsp;p3;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_box&nbsp;(p4,&nbsp;p1,&nbsp;p2))&nbsp;{&nbsp;t&nbsp;=&nbsp;p4;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;Если&nbsp;прямые&nbsp;пересекаются,&nbsp;проверяем&nbsp;принадлежит&nbsp;ли&nbsp;точка&nbsp;пересечения&nbsp;обоим&nbsp;отрезкам<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;point_in_box&nbsp;(t,&nbsp;p1,&nbsp;p2)&nbsp;&amp;&amp;&nbsp;point_in_box&nbsp;(t,&nbsp;p3,&nbsp;p4);<br>
}<br>
<span id="col7">//&nbsp;расстояние&nbsp;от&nbsp;точки&nbsp;до&nbsp;отрезка<br></span>
<span id="col6">double</span>&nbsp;dist_point_to_segment&nbsp;(point&nbsp;p,&nbsp;point&nbsp;p1,&nbsp;point&nbsp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;t&nbsp;=&nbsp;closest_point&nbsp;(toline&nbsp;(p1,&nbsp;p2),&nbsp;p);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_box&nbsp;(t,&nbsp;p1,&nbsp;p2))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;dist&nbsp;(p,&nbsp;t);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;min&nbsp;(dist&nbsp;(p,&nbsp;p1),&nbsp;dist&nbsp;(p,&nbsp;p2));<br>
}<br>
<br>
<span id="col7">//&nbsp;пересечение&nbsp;отрезка&nbsp;с&nbsp;прямой<br></span>
<span id="col6">int</span>&nbsp;cross_segment_line&nbsp;(point&nbsp;p1,&nbsp;point&nbsp;p2,&nbsp;line&nbsp;l,&nbsp;point&nbsp;&amp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;t&nbsp;=&nbsp;toline&nbsp;(p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;cross_line&nbsp;(l,&nbsp;t,&nbsp;p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;0)&nbsp;<span id="col6">return</span>&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;2)&nbsp;<span id="col6">return</span>&nbsp;2;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_box&nbsp;(p,&nbsp;p1,&nbsp;p2))&nbsp;<span id="col6">return</span>&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;0;<br>
}<br>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//***********************&nbsp;Функции&nbsp;для&nbsp;работы&nbsp;с&nbsp;треугольниками&nbsp;*****************<br></span>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//&nbsp;ориентированная&nbsp;площадь&nbsp;треугольника<br></span>
<span id="col6">double</span>&nbsp;area_triangle&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;0.5&nbsp;*&nbsp;(a.x&nbsp;*&nbsp;b.y&nbsp;+&nbsp;b.x&nbsp;*&nbsp;c.y&nbsp;+&nbsp;c.x&nbsp;*&nbsp;a.y&nbsp;-&nbsp;a.y&nbsp;*&nbsp;b.x&nbsp;-&nbsp;b.y&nbsp;*&nbsp;c.x&nbsp;-&nbsp;c.y&nbsp;*&nbsp;a.x);&nbsp;<br>
}<br>
<span id="col7">//&nbsp;угол&nbsp;между&nbsp;тремя&nbsp;точками&nbsp;-&nbsp;через&nbsp;произведение&nbsp;векторов<br></span>
<span id="col6">double</span>&nbsp;angle_point&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;x1&nbsp;=&nbsp;a.x&nbsp;-&nbsp;b.x,&nbsp;x2&nbsp;=&nbsp;c.x&nbsp;-&nbsp;b.x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;y1&nbsp;=&nbsp;a.y&nbsp;-&nbsp;b.y,&nbsp;y2&nbsp;=&nbsp;c.y&nbsp;-&nbsp;b.y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;d1&nbsp;=&nbsp;sqrt&nbsp;(x1&nbsp;*&nbsp;x1&nbsp;+&nbsp;y1&nbsp;*&nbsp;y1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;d2&nbsp;=&nbsp;sqrt&nbsp;(x2&nbsp;*&nbsp;x2&nbsp;+&nbsp;y2&nbsp;*&nbsp;y2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;acos&nbsp;((x1&nbsp;*&nbsp;x2&nbsp;+&nbsp;y1&nbsp;*&nbsp;y2)&nbsp;/&nbsp;(d1&nbsp;*&nbsp;d2));<br>
}<br>
<span id="col7">//Лежит&nbsp;ли&nbsp;точка&nbsp;справа&nbsp;от&nbsp;отрезка&nbsp;в&nbsp;обходе&nbsp;против&nbsp;часовой&nbsp;стрелки?<br></span>
<span id="col6">bool</span>&nbsp;ccw&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;area_triangle&nbsp;(a,&nbsp;b,&nbsp;c)&nbsp;&gt;&nbsp;eps;<br>
}<br>
<span id="col7">//&nbsp;высота&nbsp;угла<br></span>
line&nbsp;height_line&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;perp_line&nbsp;(toline&nbsp;(a,&nbsp;c),&nbsp;b);<br>
}<br>
<span id="col7">//&nbsp;медиана&nbsp;угла<br></span>
line&nbsp;median_line&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;toline&nbsp;(b,&nbsp;point&nbsp;((a.x&nbsp;+&nbsp;c.x)&nbsp;/&nbsp;2,&nbsp;(a.y&nbsp;+&nbsp;c.y)&nbsp;/&nbsp;2));<br>
}<br>
<span id="col7">//&nbsp;биссектриса&nbsp;угла<br></span>
line&nbsp;bisector_line&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;ab&nbsp;=&nbsp;dist&nbsp;(a,&nbsp;b);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;bc&nbsp;=&nbsp;dist&nbsp;(b,&nbsp;c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;tab&nbsp;=&nbsp;part_segment&nbsp;(b,&nbsp;a,&nbsp;bc,&nbsp;ab);<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;tbc&nbsp;=&nbsp;part_segment&nbsp;(b,&nbsp;c,&nbsp;ab,&nbsp;bc);<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;p&nbsp;=&nbsp;part_segment&nbsp;(tab,&nbsp;tbc,&nbsp;1,&nbsp;1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;toline&nbsp;(b,&nbsp;p);<br>
}<br>
<span id="col7">//&nbsp;вписанная&nbsp;в&nbsp;треугольник&nbsp;окружность<br></span>
circle&nbsp;entered_circle&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;ba&nbsp;=&nbsp;bisector_line&nbsp;(b,&nbsp;a,&nbsp;c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;bb&nbsp;=&nbsp;bisector_line&nbsp;(a,&nbsp;b,&nbsp;c);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;circle&nbsp;res;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;cross_line&nbsp;(ba,&nbsp;bb,&nbsp;res.c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;res.r&nbsp;=&nbsp;dist_point_to_line&nbsp;(res.c,&nbsp;toline&nbsp;(a,&nbsp;b));<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;res;<br>
}<br>
<span id="col7">//&nbsp;описанная&nbsp;около&nbsp;треугольника&nbsp;окружность<br></span>
circle&nbsp;described_circle&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;tab&nbsp;=&nbsp;part_segment&nbsp;(a,&nbsp;b,&nbsp;1,&nbsp;1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;tbc&nbsp;=&nbsp;part_segment&nbsp;(b,&nbsp;c,&nbsp;1,&nbsp;1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;pab&nbsp;=&nbsp;perp_line&nbsp;(toline&nbsp;(a,&nbsp;b),&nbsp;tab);<br>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;pbc&nbsp;=&nbsp;perp_line&nbsp;(toline&nbsp;(b,&nbsp;c),&nbsp;tbc);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;circle&nbsp;res;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;cross_line&nbsp;(pab,&nbsp;pbc,&nbsp;res.c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;res.r&nbsp;=&nbsp;dist&nbsp;(res.c,&nbsp;a);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;res;<br>
}<br>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//***********************&nbsp;Функции&nbsp;для&nbsp;работы&nbsp;с&nbsp;окружностями&nbsp;*******************<br></span>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//&nbsp;положение&nbsp;точки&nbsp;относительно&nbsp;окружности<br></span>
<span id="col6">int</span>&nbsp;point_in_circle&nbsp;(point&nbsp;p,&nbsp;circle&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;d&nbsp;=&nbsp;dist&nbsp;(p,&nbsp;c.c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(c.r&nbsp;-&nbsp;d)&nbsp;&lt;=&nbsp;eps)&nbsp;<span id="col6">return</span>&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(c.r&nbsp;&gt;&nbsp;d)&nbsp;<span id="col6">return</span>&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;2;<br>
}<br>
<span id="col7">//&nbsp;минимальная&nbsp;окружность&nbsp;покрывающая&nbsp;три&nbsp;любые&nbsp;точки<br></span>
circle&nbsp;min_circle_for_three_point&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b,&nbsp;point&nbsp;c)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;это&nbsp;треугольник,&nbsp;то&nbsp;описываем&nbsp;его<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(area_triangle&nbsp;(a,&nbsp;b,&nbsp;c))&nbsp;&gt;&nbsp;eps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;described_circle&nbsp;(a,&nbsp;b,&nbsp;c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;иначе&nbsp;это&nbsp;отрезок&nbsp;и&nbsp;точка&nbsp;в&nbsp;нём&nbsp;-&nbsp;из&nbsp;середины&nbsp;проводим&nbsp;окружность&nbsp;диаметром&nbsp;в&nbsp;отрезок<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;maxP&nbsp;=&nbsp;max_px&nbsp;(max_px&nbsp;(a,&nbsp;b),&nbsp;c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;minP&nbsp;=&nbsp;min_px&nbsp;(max_px&nbsp;(a,&nbsp;b),&nbsp;c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;circle&nbsp;(part_segment&nbsp;(maxP,&nbsp;minP,&nbsp;1,&nbsp;1),&nbsp;0.5&nbsp;*&nbsp;dist&nbsp;(minP,&nbsp;maxP));<br>
}<br>
<span id="col7">//&nbsp;точки&nbsp;пересечения&nbsp;касательной&nbsp;с&nbsp;окружностью,&nbsp;решение&nbsp;основанное&nbsp;на&nbsp;повороте&nbsp;точек<br></span>
<span id="col6">int</span>&nbsp;tangent_points&nbsp;(point&nbsp;p,&nbsp;circle&nbsp;c,&nbsp;point&nbsp;&amp;p1,&nbsp;point&nbsp;&amp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;случаи,&nbsp;когда&nbsp;решений&nbsp;меньше&nbsp;двух<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;point_in_circle&nbsp;(p,&nbsp;c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;0)&nbsp;<span id="col6">return</span>&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;угол&nbsp;между&nbsp;центром&nbsp;окружности&nbsp;и&nbsp;точкой&nbsp;касания<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;d&nbsp;=&nbsp;dist&nbsp;(p,&nbsp;c.c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;alpha&nbsp;=&nbsp;asin&nbsp;(c.r&nbsp;/&nbsp;d);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;поворот&nbsp;центра&nbsp;окружности&nbsp;вокруг&nbsp;заданной&nbsp;точки&nbsp;в&nbsp;обе&nbsp;стороны&nbsp;на&nbsp;заданный&nbsp;угол<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;_p1&nbsp;=&nbsp;turn_of&nbsp;(c.c,&nbsp;alpha,&nbsp;p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;_p2&nbsp;=&nbsp;turn_of&nbsp;(c.c,&nbsp;-&nbsp;alpha,&nbsp;p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;расстояние&nbsp;от&nbsp;точки&nbsp;до&nbsp;точки&nbsp;касания&nbsp;и&nbsp;вычисляем&nbsp;точки&nbsp;касания<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;k&nbsp;=&nbsp;sqrt&nbsp;(d&nbsp;*&nbsp;d&nbsp;-&nbsp;c.r&nbsp;*&nbsp;c.r);<br>
&nbsp;&nbsp;&nbsp;&nbsp;d&nbsp;=&nbsp;dist&nbsp;(p,&nbsp;_p1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;part_segment&nbsp;(p,&nbsp;_p1,&nbsp;k,&nbsp;d&nbsp;-&nbsp;k);<br>
&nbsp;&nbsp;&nbsp;&nbsp;p2&nbsp;=&nbsp;part_segment&nbsp;(p,&nbsp;_p2,&nbsp;k,&nbsp;d&nbsp;-&nbsp;k);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;2;<br>
}<br>
<br>
<span id="col7">//&nbsp;пересечение&nbsp;прямой&nbsp;с&nbsp;окружностью<br></span>
<span id="col6">int</span>&nbsp;cross_line_circle&nbsp;(line&nbsp;l,&nbsp;circle&nbsp;c,&nbsp;point&nbsp;&amp;p1,&nbsp;point&nbsp;&amp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;проекция&nbsp;центра&nbsp;окружности&nbsp;на&nbsp;прямую<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;p&nbsp;=&nbsp;closest_point&nbsp;(l,&nbsp;c.c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;сколько&nbsp;всего&nbsp;решений?<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;d&nbsp;=&nbsp;dist&nbsp;(c.c,&nbsp;p);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(d&nbsp;-&nbsp;c.r)&nbsp;&lt;=&nbsp;eps)&nbsp;flag&nbsp;=&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(c.r&nbsp;&gt;&nbsp;d)&nbsp;flag&nbsp;=&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;<span id="col6">return</span>&nbsp;0;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;находим&nbsp;расстояние&nbsp;от&nbsp;проекции&nbsp;до&nbsp;точек&nbsp;пересечения<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;k&nbsp;=&nbsp;sqrt&nbsp;(c.r&nbsp;*&nbsp;c.r&nbsp;-&nbsp;d&nbsp;*&nbsp;d);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;t&nbsp;=&nbsp;dist&nbsp;(point&nbsp;(0,&nbsp;0),&nbsp;point&nbsp;(l.b,&nbsp;-&nbsp;l.a));<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;добавляем&nbsp;к&nbsp;проекции&nbsp;векторы&nbsp;направленные&nbsp;к&nbsp;точкам&nbsp;пеерсечения<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;add_vector&nbsp;(p,&nbsp;point&nbsp;(0,&nbsp;0),&nbsp;point&nbsp;(-&nbsp;l.b,&nbsp;l.a),&nbsp;k&nbsp;/&nbsp;t);<br>
&nbsp;&nbsp;&nbsp;&nbsp;p2&nbsp;=&nbsp;add_vector&nbsp;(p,&nbsp;point&nbsp;(0,&nbsp;0),&nbsp;point&nbsp;(l.b,&nbsp;-&nbsp;l.a),&nbsp;k&nbsp;/&nbsp;t);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;flag;<br>
}<br>
<span id="col7">//&nbsp;пересечение&nbsp;окружностей<br></span>
<span id="col6">int</span>&nbsp;cross_circle&nbsp;(<span id="col6">double</span>&nbsp;x1,&nbsp;<span id="col6">double</span>&nbsp;y1,&nbsp;<span id="col6">double</span>&nbsp;r1,&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;x2,&nbsp;<span id="col6">double</span>&nbsp;y2,&nbsp;<span id="col6">double</span>&nbsp;r2,&nbsp;point&nbsp;&amp;p1,&nbsp;point&nbsp;&amp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(x1&nbsp;-&nbsp;x2)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;abs&nbsp;(y1&nbsp;-&nbsp;y2)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;abs&nbsp;(r1&nbsp;-&nbsp;r2)&nbsp;&lt;=&nbsp;eps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;3;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;a&nbsp;=&nbsp;2&nbsp;*&nbsp;(x2&nbsp;-&nbsp;x1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;b&nbsp;=&nbsp;2&nbsp;*&nbsp;(y2&nbsp;-&nbsp;y1);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;c&nbsp;=&nbsp;x1&nbsp;*&nbsp;x1&nbsp;+&nbsp;y1&nbsp;*&nbsp;y1&nbsp;-&nbsp;r1&nbsp;*&nbsp;r1&nbsp;-&nbsp;(x2&nbsp;*&nbsp;x2&nbsp;+&nbsp;y2&nbsp;*&nbsp;y2&nbsp;-&nbsp;r2&nbsp;*&nbsp;r2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;cross_line_circle&nbsp;(line&nbsp;(a,&nbsp;b,&nbsp;c),&nbsp;circle&nbsp;(x1,&nbsp;y1,&nbsp;r1),&nbsp;p1,&nbsp;p2);<br>
}<br>
<span id="col7">//&nbsp;точки&nbsp;касания&nbsp;касательной&nbsp;с&nbsp;окружностью<br></span>
<span id="col6">int</span>&nbsp;contact_points&nbsp;(point&nbsp;p,&nbsp;circle&nbsp;c,&nbsp;point&nbsp;&amp;p1,&nbsp;point&nbsp;&amp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;point_in_circle&nbsp;(p,&nbsp;c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;0)&nbsp;<span id="col6">return</span>&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;находим&nbsp;расстояние&nbsp;до&nbsp;точек&nbsp;касания<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;d&nbsp;=&nbsp;dist&nbsp;(p,&nbsp;c.c);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;k&nbsp;=&nbsp;sqrt&nbsp;(d&nbsp;*&nbsp;d&nbsp;-&nbsp;c.r&nbsp;*&nbsp;c.r);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;cross_circle&nbsp;(p.x,&nbsp;p.y,&nbsp;k,&nbsp;c.c.x,&nbsp;c.c.y,&nbsp;c.r,&nbsp;p1,&nbsp;p2);<br>
}<br>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//***********************&nbsp;Функции&nbsp;для&nbsp;работы&nbsp;с&nbsp;лучами&nbsp;*************************<br></span>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//&nbsp;принадлежит&nbsp;ли&nbsp;точка&nbsp;лучу?<br></span>
<span id="col6">bool</span>&nbsp;point_in_ray&nbsp;(point&nbsp;p,&nbsp;point&nbsp;p1,&nbsp;point&nbsp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;принадлежит&nbsp;ли&nbsp;точка&nbsp;прямой&nbsp;луча<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;l&nbsp;=&nbsp;toline&nbsp;(p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_line&nbsp;(l,&nbsp;p)&nbsp;!=&nbsp;0)&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;прямая&nbsp;вертикальная,&nbsp;то&nbsp;проверяем&nbsp;на&nbsp;y<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(l.b)&nbsp;&lt;=&nbsp;eps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(p2.y&nbsp;&gt;=&nbsp;p1.y)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;p.y&nbsp;&gt;=&nbsp;p1.y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;p.y&nbsp;&lt;=&nbsp;p1.y;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;иначе&nbsp;проверяем&nbsp;на&nbsp;x&nbsp;<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(p2.x&nbsp;&gt;=&nbsp;p1.x)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;p.x&nbsp;&gt;=&nbsp;p1.x;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;p.x&nbsp;&lt;=&nbsp;p1.x;<br>
}<br>
<span id="col7">//&nbsp;расстояние&nbsp;от&nbsp;точки&nbsp;до&nbsp;луча<br></span>
<span id="col6">double</span>&nbsp;dist_point_to_ray&nbsp;(point&nbsp;p,&nbsp;point&nbsp;p1,&nbsp;point&nbsp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;проектируем&nbsp;точку&nbsp;на&nbsp;прямую,&nbsp;проходящую&nbsp;по&nbsp;лучу<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;l&nbsp;=&nbsp;toline&nbsp;(p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;t&nbsp;=&nbsp;closest_point&nbsp;(l,&nbsp;p);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;полученная&nbsp;точка&nbsp;принадлежит&nbsp;лучу,&nbsp;то&nbsp;возвращаем&nbsp;расстояние&nbsp;до&nbsp;прямой<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_ray&nbsp;(t,&nbsp;p1,&nbsp;p2))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;dist&nbsp;(p,&nbsp;t);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;иначе&nbsp;возвращаем&nbsp;расстояние&nbsp;до&nbsp;начала&nbsp;луча<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;dist&nbsp;(p,&nbsp;p1);<br>
}<br>
<span id="col7">//&nbsp;пересение&nbsp;луча&nbsp;с&nbsp;окружностью<br></span>
<span id="col6">int</span>&nbsp;cross_ray_circle&nbsp;(point&nbsp;p,&nbsp;point&nbsp;t,&nbsp;circle&nbsp;c,&nbsp;point&nbsp;&amp;p1,&nbsp;point&nbsp;&amp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;пересекаем&nbsp;прямую&nbsp;луча&nbsp;с&nbsp;окружностью<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;line&nbsp;l&nbsp;=&nbsp;toline&nbsp;(p,&nbsp;t);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;cross_line_circle&nbsp;(l,&nbsp;c,&nbsp;p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;0)&nbsp;<span id="col6">return</span>&nbsp;0;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;точки&nbsp;пересечения&nbsp;есть,&nbsp;то&nbsp;проверяем&nbsp;их&nbsp;на&nbsp;принадлежность&nbsp;лучу<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;точка&nbsp;одна<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_ray&nbsp;(p1,&nbsp;p,&nbsp;t))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;0;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;точки&nbsp;две<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;b1&nbsp;=&nbsp;point_in_ray&nbsp;(p1,&nbsp;p,&nbsp;t);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;b2&nbsp;=&nbsp;point_in_ray&nbsp;(p2,&nbsp;p,&nbsp;t);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(b1)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(b2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(b2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;p2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;0;<br>
}<br>
<span id="col7">//&nbsp;поиск&nbsp;луча&nbsp;с&nbsp;известным&nbsp;началом,&nbsp;который&nbsp;не&nbsp;пересекает&nbsp;ни&nbsp;одну&nbsp;из&nbsp;заданных&nbsp;окружностей<br></span>
<span id="col6">class</span>&nbsp;less_of_polar_angle<br>
{<br>
<span id="col6">public</span>&nbsp;:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;operator&nbsp;()&nbsp;(circle&nbsp;c1,&nbsp;circle&nbsp;c2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;c1.alpha&nbsp;&lt;&nbsp;c2.alpha;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
};<br>
<span id="col6">bool</span>&nbsp;ray_nocross_for_circset&nbsp;(point&nbsp;p,&nbsp;vector&nbsp;&lt;&nbsp;circle&nbsp;&gt;&nbsp;v,&nbsp;point&nbsp;&amp;t)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;n&nbsp;=&nbsp;v.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j,&nbsp;k;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;для&nbsp;каждой&nbsp;окружности&nbsp;находим&nbsp;её&nbsp;полярный&nbsp;угол<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;v[i].alpha&nbsp;=&nbsp;polar_angle&nbsp;(point&nbsp;(v[i].c.x&nbsp;-&nbsp;p.x,&nbsp;v[i].c.y&nbsp;-&nbsp;p.y));<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;сортируем&nbsp;все&nbsp;окружности&nbsp;по&nbsp;полярному&nbsp;углу&nbsp;одной&nbsp;из&nbsp;точек<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;sort&nbsp;(v.begin&nbsp;(),&nbsp;v.end&nbsp;(),&nbsp;less_of_polar_angle&nbsp;());<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;находим&nbsp;окружность&nbsp;с&nbsp;максимальным&nbsp;радиусом<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(v[i].r&nbsp;&gt;&nbsp;v[k].r)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;k&nbsp;=&nbsp;i;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;рассматриваем&nbsp;все&nbsp;окружности&nbsp;по&nbsp;очереди,&nbsp;начиная&nbsp;с&nbsp;k<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;k;&nbsp;<span id="col7">//&nbsp;текущая&nbsp;окружность<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;do<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;p1,&nbsp;p2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;contact_points&nbsp;(p,&nbsp;v[i],&nbsp;p1,&nbsp;p2);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;alpha&nbsp;=&nbsp;polar_angle&nbsp;(point&nbsp;(p1.x&nbsp;-&nbsp;p.x,&nbsp;p1.y&nbsp;-&nbsp;p.y));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;betta&nbsp;=&nbsp;polar_angle&nbsp;(point&nbsp;(p2.x&nbsp;-&nbsp;p.x,&nbsp;p2.y&nbsp;-&nbsp;p.y));<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;находим&nbsp;левую&nbsp;точку&nbsp;касания&nbsp;-&nbsp;t<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(alpha&nbsp;-&nbsp;betta)&nbsp;&gt;=&nbsp;pi)&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(alpha&nbsp;&lt;&nbsp;betta)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t&nbsp;=&nbsp;p1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t&nbsp;=&nbsp;p2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(alpha&nbsp;&lt;&nbsp;betta)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t&nbsp;=&nbsp;p2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t&nbsp;=&nbsp;p1;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;отодвигаем&nbsp;её&nbsp;на&nbsp;0.001&nbsp;по&nbsp;перпендикуляру&nbsp;влево<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;d&nbsp;=&nbsp;0.001&nbsp;/&nbsp;dist&nbsp;(v[i].c,&nbsp;t);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;t&nbsp;=&nbsp;add_vector&nbsp;(t,&nbsp;v[i].c,&nbsp;t,&nbsp;d);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;ищем&nbsp;первую&nbsp;окружность,&nbsp;которая&nbsp;пересекает&nbsp;луч&nbsp;(p,&nbsp;t)<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;flag_cross&nbsp;=&nbsp;<span id="col6">false</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;n;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;do<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(cross_ray_circle&nbsp;(p,&nbsp;t,&nbsp;v[j],&nbsp;p1,&nbsp;p2)&nbsp;!=&nbsp;0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flag_cross&nbsp;=&nbsp;<span id="col6">true</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;i&nbsp;=&nbsp;j;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">break</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;(j&nbsp;+&nbsp;1)&nbsp;%&nbsp;n;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(j&nbsp;!=&nbsp;k);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;все&nbsp;окружности&nbsp;не&nbsp;пересекают&nbsp;этот&nbsp;луч<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag_cross&nbsp;==&nbsp;<span id="col6">false</span>)&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(i&nbsp;!=&nbsp;k);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
}<br>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//***********************&nbsp;Функции&nbsp;для&nbsp;работы&nbsp;с&nbsp;многоугольниками&nbsp;***************<br></span>
<span id="col7">//-----------------------------------------------------------------------------<br></span>
<span id="col7">//&nbsp;ориентированная&nbsp;площадь&nbsp;многоугольника<br></span>
<span id="col6">double</span>&nbsp;area_polygon&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;s&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;p.size();&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;+=&nbsp;p[i].x&nbsp;*&nbsp;p[j].y&nbsp;-&nbsp;p[j].x&nbsp;*&nbsp;p[i].y;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;0.5&nbsp;*&nbsp;s;<br>
}<br>
<br>
<span id="col7">//&nbsp;периметр&nbsp;многоугольника<br></span>
<span id="col6">double</span>&nbsp;perimeter_polygon&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;perimeter&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;p.size();&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;perimeter&nbsp;+=&nbsp;dist&nbsp;(p[i],&nbsp;p[j]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;perimeter;<br>
}<br>
<span id="col7">//&nbsp;принадлежит&nbsp;ли&nbsp;точка&nbsp;в&nbsp;многоугольнику?<br></span>
<span id="col6">bool</span>&nbsp;point_in_polygon&nbsp;(point&nbsp;t,&nbsp;vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;count&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;p.size();&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(min&nbsp;(p[i].y,&nbsp;p[j].y)&nbsp;&lt;&nbsp;t.y&nbsp;&amp;&amp;&nbsp;t.y&nbsp;&lt;=&nbsp;max&nbsp;(p[i].y,&nbsp;p[j].y)&nbsp;&amp;&amp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ccw&nbsp;(min_py&nbsp;(p[i],&nbsp;p[j]),&nbsp;max_py&nbsp;(p[i],&nbsp;p[j]),&nbsp;t))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;проекция&nbsp;точки&nbsp;лежит&nbsp;на&nbsp;отрезке&nbsp;и&nbsp;точка&nbsp;находится&nbsp;справа&nbsp;от&nbsp;отрезка<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;то&nbsp;увеличиваем&nbsp;количество&nbsp;"вхождений"&nbsp;точки&nbsp;в&nbsp;многоугольник<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++&nbsp;count;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;count&nbsp;%&nbsp;2;<br>
}<br>
<span id="col7">//&nbsp;количество&nbsp;точек&nbsp;на&nbsp;границе&nbsp;многоугольника<br></span>
<span id="col6">long</span>&nbsp;<span id="col6">long</span>&nbsp;count_B&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">long</span>&nbsp;<span id="col6">long</span>&nbsp;count&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;p.size();&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;j&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;count&nbsp;+=&nbsp;gcd&nbsp;(p[j].x&nbsp;-&nbsp;p[i].x,&nbsp;p[j].y&nbsp;-&nbsp;p[i].y);<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;count;<br>
}<br>
<span id="col7">//&nbsp;количество&nbsp;точек&nbsp;внутри&nbsp;многоугольника<br></span>
<span id="col6">long</span>&nbsp;<span id="col6">long</span>&nbsp;count_I&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;abs&nbsp;(area_polygon&nbsp;(p))&nbsp;-&nbsp;count_B&nbsp;(p)&nbsp;/&nbsp;2&nbsp;+&nbsp;1;<br>
}<br>
<span id="col7">//&nbsp;выпуклый&nbsp;ли&nbsp;многоугольник?<br></span>
<span id="col6">bool</span>&nbsp;is_convex&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;l,&nbsp;i,&nbsp;r;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;n&nbsp;=&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;isccw&nbsp;=&nbsp;ccw&nbsp;(p[n&nbsp;-&nbsp;1],&nbsp;p[0],&nbsp;p[1]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;l&nbsp;=&nbsp;(i&nbsp;-&nbsp;1&nbsp;+&nbsp;n)&nbsp;%&nbsp;n;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;n;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(ccw&nbsp;(p[l],&nbsp;p[i],&nbsp;p[r])&nbsp;!=&nbsp;isccw)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;<br>
}<br>
<span id="col7">//&nbsp;выпуклая&nbsp;оболочка&nbsp;-&nbsp;алгоритм&nbsp;Джарвиса<br></span>
<span id="col6">void</span>&nbsp;hull_jarvis&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p,&nbsp;vector&nbsp;&lt;&nbsp;<span id="col6">int</span>&nbsp;&gt;&nbsp;&amp;ip)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;n&nbsp;=&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;first,&nbsp;q,&nbsp;next,&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;sign;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;находим&nbsp;самую&nbsp;нижнюю&nbsp;из&nbsp;самых&nbsp;левых&nbsp;точек<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;first&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(p[i].x&nbsp;&lt;&nbsp;p[first].x&nbsp;||&nbsp;(p[i].x&nbsp;==&nbsp;p[first].x&nbsp;&amp;&amp;&nbsp;p[i].y&nbsp;&lt;&nbsp;p[first].y))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first&nbsp;=&nbsp;i;<br>
&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;q&nbsp;=&nbsp;first;&nbsp;<span id="col7">//&nbsp;текущая&nbsp;точка<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;добавляем&nbsp;точки&nbsp;в&nbsp;оболочку<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;do<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip.push_back(q);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next&nbsp;=&nbsp;q;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;ищем&nbsp;следующую&nbsp;точку<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;n&nbsp;-&nbsp;1;&nbsp;i&nbsp;&gt;=&nbsp;0;&nbsp;--&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(p[i].x&nbsp;!=&nbsp;p[q].x&nbsp;||&nbsp;p[i].y&nbsp;!=&nbsp;p[q].y)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;sign&nbsp;=&nbsp;area_triangle&nbsp;(p[q],&nbsp;p[i],&nbsp;p[next]);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(next&nbsp;==&nbsp;q&nbsp;||&nbsp;sign&nbsp;&gt;&nbsp;0&nbsp;||&nbsp;(sign&nbsp;==&nbsp;0&nbsp;&amp;&amp;&nbsp;point_in_box&nbsp;(p[next],&nbsp;p[q],&nbsp;p[i])))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;next&nbsp;=&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;q&nbsp;=&nbsp;next;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(q&nbsp;!=&nbsp;first);<br>
}<br>
<span id="col7">//&nbsp;выпуклая&nbsp;оболочка&nbsp;-&nbsp;алгоритм&nbsp;Грехема<br></span>
point&nbsp;first;<br>
<span id="col6">class</span>&nbsp;less_of_ccw<br>
{<br>
<span id="col6">public</span>&nbsp;:<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">bool</span>&nbsp;operator&nbsp;()&nbsp;(point&nbsp;a,&nbsp;point&nbsp;b)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(a.i&nbsp;==&nbsp;first.i)&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(b.i&nbsp;==&nbsp;first.i)&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(ccw&nbsp;(first,&nbsp;a,&nbsp;b))&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">true</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(ccw&nbsp;(first,&nbsp;b,&nbsp;a))&nbsp;<span id="col6">return</span>&nbsp;<span id="col6">false</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;dist&nbsp;(first,&nbsp;a)&nbsp;&gt;&nbsp;dist&nbsp;(first,&nbsp;b);<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
};<br>
<span id="col6">void</span>&nbsp;hull_graham&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p,&nbsp;vector&nbsp;&lt;&nbsp;<span id="col6">int</span>&nbsp;&gt;&nbsp;&amp;ip)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;n&nbsp;=&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p[i].i&nbsp;=&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;ищем&nbsp;самую&nbsp;нижнюю&nbsp;из&nbsp;самых&nbsp;левых&nbsp;точек&nbsp;-&nbsp;первая&nbsp;точка<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;first&nbsp;=&nbsp;p[0];<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(first.x&nbsp;&gt;&nbsp;p[i].x&nbsp;||&nbsp;(first.x&nbsp;==&nbsp;p[i].x&nbsp;&amp;&amp;&nbsp;first.y&nbsp;&gt;&nbsp;p[i].y))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;first&nbsp;=&nbsp;p[i];<br>
&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;сортируем&nbsp;точки&nbsp;по&nbsp;по&nbsp;углу&nbsp;относительно&nbsp;первой&nbsp;точки<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;sort&nbsp;(p.begin&nbsp;(),&nbsp;p.end&nbsp;(),&nbsp;less_of_ccw&nbsp;());<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;первая&nbsp;точка&nbsp;оболочки<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;ip.push_back&nbsp;(0);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;ищем&nbsp;вторую&nbsp;точку&nbsp;оболочки<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;n&nbsp;&amp;&amp;&nbsp;abs&nbsp;(area_triangle&nbsp;(p[0],&nbsp;p[1],&nbsp;p[i]))&nbsp;&lt;=&nbsp;eps;&nbsp;++&nbsp;i);<br>
&nbsp;&nbsp;&nbsp;&nbsp;ip.push_back&nbsp;(1);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;последовательно&nbsp;добавляем&nbsp;точки&nbsp;в&nbsp;оболочку<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;top&nbsp;=&nbsp;1;&nbsp;<span id="col7">//&nbsp;индекс&nbsp;последней&nbsp;точки&nbsp;в&nbsp;оболочке<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(i&nbsp;&lt;&nbsp;n)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;угол&nbsp;больше&nbsp;pi&nbsp;то&nbsp;извлекаем&nbsp;последнюю&nbsp;точку&nbsp;из&nbsp;оболочки<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(!&nbsp;ccw&nbsp;(p[ip[top&nbsp;-&nbsp;1]],&nbsp;p[ip[top]],&nbsp;p[i]))<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--&nbsp;top;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip.pop_back&nbsp;();<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;иначе&nbsp;добавляем&nbsp;точку&nbsp;в&nbsp;оболочку<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++&nbsp;top;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip.push_back&nbsp;(i);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;ip.size();&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;ip[i]&nbsp;=&nbsp;p[ip[i]].i;<br>
}<br>
<span id="col7">//&nbsp;минимальная&nbsp;окружность,&nbsp;покрывающая&nbsp;множество&nbsp;точек<br></span>
circle&nbsp;min_described_circle&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;n&nbsp;=&nbsp;p.size&nbsp;();<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j,&nbsp;k;<br>
&nbsp;&nbsp;&nbsp;&nbsp;circle&nbsp;c&nbsp;=&nbsp;circle&nbsp;(0,&nbsp;0,&nbsp;1e9);<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(j&nbsp;=&nbsp;i&nbsp;+&nbsp;1;&nbsp;j&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;j)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(k&nbsp;=&nbsp;j&nbsp;+&nbsp;1;&nbsp;k&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;k)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;circle&nbsp;t&nbsp;=&nbsp;min_circle_for_three_point&nbsp;(p[i],&nbsp;p[j],&nbsp;p[k]);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;u;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(u&nbsp;=&nbsp;0;&nbsp;u&nbsp;&lt;&nbsp;n;&nbsp;++&nbsp;u)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(point_in_circle&nbsp;(p[u],&nbsp;t)&nbsp;==&nbsp;2)&nbsp;<span id="col6">break</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(u&nbsp;&gt;=&nbsp;n&nbsp;&amp;&amp;&nbsp;t.r&nbsp;&lt;&nbsp;c.r)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c&nbsp;=&nbsp;t;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;c;<br>
}<br>
<span id="col7">//&nbsp;расположение&nbsp;многоугольника&nbsp;отосительно&nbsp;прямой<br></span>
<span id="col7">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1&nbsp;-&nbsp;находится&nbsp;с&nbsp;положительной&nbsp;стороны<br></span>
<span id="col7">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;-&nbsp;1&nbsp;-&nbsp;находится&nbsp;с&nbsp;отрицательной&nbsp;стороны<br></span>
<span id="col7">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;-&nbsp;прямая&nbsp;пересекает&nbsp;одну&nbsp;из&nbsp;сторон&nbsp;многоугольника&nbsp;(сторону&nbsp;а&nbsp;не&nbsp;вершину)<br></span>
<span id="col6">int</span>&nbsp;polygon_for_line&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p,&nbsp;line&nbsp;l)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;s&nbsp;=&nbsp;-&nbsp;2;&nbsp;<span id="col7">//&nbsp;знак<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;p.size();&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;t&nbsp;=&nbsp;point_in_line&nbsp;(l,&nbsp;p[i]);&nbsp;<span id="col7">//&nbsp;положение&nbsp;вершины&nbsp;относительно&nbsp;прямой<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(t&nbsp;!=&nbsp;0)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;точка&nbsp;не&nbsp;принадлежить&nbsp;прямой<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(s&nbsp;!=&nbsp;-&nbsp;2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;s&nbsp;мы&nbsp;вычислили<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(t&nbsp;!=&nbsp;s)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;знаки&nbsp;различны,&nbsp;то&nbsp;прямая&nbsp;пересекает&nbsp;сторону&nbsp;многоугольника<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s&nbsp;=&nbsp;t;&nbsp;<span id="col7">//&nbsp;если&nbsp;s&nbsp;мы&nbsp;ещё&nbsp;не&nbsp;вычислили,&nbsp;присваиваем&nbsp;ему&nbsp;вычисленное&nbsp;значение<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(s&nbsp;==&nbsp;-&nbsp;2)&nbsp;<span id="col6">return</span>&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;s;<br>
}<br>
<br>
<span id="col7">//&nbsp;разрезание&nbsp;многоугольника&nbsp;по&nbsp;диагонали<br></span>
<span id="col6">void</span>&nbsp;cut_polygon_for_edge&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p,&nbsp;<span id="col6">int</span>&nbsp;i1,&nbsp;<span id="col6">int</span>&nbsp;i2,&nbsp;vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;&amp;p1,&nbsp;vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;&amp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i;&nbsp;&nbsp;&nbsp;&nbsp;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;n&nbsp;=&nbsp;p.size();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;i1;&nbsp;i&nbsp;!=&nbsp;(i2&nbsp;+&nbsp;1)&nbsp;%&nbsp;n;&nbsp;i&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;n)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p1.push_back&nbsp;(p[i]);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;i2;&nbsp;i&nbsp;!=&nbsp;(i1&nbsp;+&nbsp;1)&nbsp;%&nbsp;n;&nbsp;i&nbsp;=&nbsp;(i&nbsp;+&nbsp;1)&nbsp;%&nbsp;n)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;p2.push_back&nbsp;(p[i]);<br>
}<br>
<span id="col7">//&nbsp;разрезание&nbsp;выпуклого&nbsp;многоугольника&nbsp;по&nbsp;прямой<br></span>
<span id="col7">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;функция&nbsp;возвращает&nbsp;два&nbsp;многоугольника<br></span>
<span id="col7">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;первый&nbsp;многоугольник&nbsp;лежит&nbsp;с&nbsp;положительной&nbsp;стороны&nbsp;от&nbsp;прямой<br></span>
<span id="col7">//&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;второй&nbsp;-&nbsp;с&nbsp;отрицательной<br></span>
<span id="col6">void</span>&nbsp;cut_convex_for_line&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;p,&nbsp;line&nbsp;l,&nbsp;vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;&amp;v1,&nbsp;vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;&amp;v2,&nbsp;point&nbsp;&amp;p1,&nbsp;point&nbsp;&amp;p2)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;n&nbsp;=&nbsp;p.size();<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i,&nbsp;j;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;находим&nbsp;точки&nbsp;пересечение&nbsp;прямой&nbsp;с&nbsp;многоугольником&nbsp;и&nbsp;вставляем&nbsp;их&nbsp;в&nbsp;многоугольник<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;c&nbsp;=&nbsp;0;&nbsp;<span id="col7">//&nbsp;счётчик&nbsp;пересечений&nbsp;многоугольника&nbsp;с&nbsp;прямой<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;s&nbsp;(p.begin(),&nbsp;p.end());&nbsp;<span id="col7">//&nbsp;представляем&nbsp;многоугольник&nbsp;как&nbsp;список&nbsp;вершин<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;::&nbsp;iterator&nbsp;it,&nbsp;jt;&nbsp;<span id="col7">//&nbsp;итераторы&nbsp;обходы<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;list&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;::&nbsp;iterator&nbsp;i1,&nbsp;i2;&nbsp;<span id="col7">//&nbsp;итераторы&nbsp;вставленных&nbsp;точек<br></span>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(it&nbsp;=&nbsp;s.begin();&nbsp;it&nbsp;!=&nbsp;s.end();&nbsp;++&nbsp;it)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;jt&nbsp;=&nbsp;it;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++&nbsp;jt;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(jt&nbsp;==&nbsp;s.end())&nbsp;jt&nbsp;=&nbsp;s.begin();<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;пересекаем&nbsp;прямую&nbsp;со&nbsp;стороной<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point&nbsp;t;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;flag&nbsp;=&nbsp;cross_segment_line&nbsp;(*it,&nbsp;*jt,&nbsp;l,&nbsp;t);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;прямая&nbsp;проходит&nbsp;по&nbsp;стороне<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(polygon_for_line&nbsp;(p,&nbsp;l)&nbsp;&gt;&nbsp;0)&nbsp;&nbsp;&nbsp;&nbsp;v1&nbsp;=&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;&nbsp;&nbsp;&nbsp;v2&nbsp;=&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;прямая&nbsp;и&nbsp;сторона&nbsp;не&nbsp;пересекаются<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(flag&nbsp;==&nbsp;0)&nbsp;<span id="col6">continue</span>;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;прямая&nbsp;проходит&nbsp;через&nbsp;вершину&nbsp;многоугольника<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(t.x&nbsp;-&nbsp;(*it).x)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;abs&nbsp;(t.y&nbsp;-&nbsp;(*it).y)&nbsp;&lt;=&nbsp;eps)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(c&nbsp;==&nbsp;0)&nbsp;i1&nbsp;=&nbsp;it;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;i2&nbsp;=&nbsp;it;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++&nbsp;c;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">continue</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(t.x&nbsp;-&nbsp;(*jt).x)&nbsp;&lt;=&nbsp;eps&nbsp;&amp;&amp;&nbsp;abs&nbsp;(t.y&nbsp;-&nbsp;(*jt).y)&nbsp;&lt;=&nbsp;eps)&nbsp;<span id="col6">continue</span>;<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;иначе&nbsp;прямая&nbsp;пересекает&nbsp;сторону,&nbsp;вставляем&nbsp;точку&nbsp;пересечения&nbsp;в&nbsp;многоугольник<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++&nbsp;it;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;it&nbsp;=&nbsp;s.insert&nbsp;(it,&nbsp;t);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;увеличиваем&nbsp;счётчик&nbsp;пересечений&nbsp;многоугольника&nbsp;с&nbsp;прямой<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(c&nbsp;==&nbsp;0)&nbsp;i1&nbsp;=&nbsp;it;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;i2&nbsp;=&nbsp;it;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;++&nbsp;c;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;прямая&nbsp;не&nbsp;пересекает&nbsp;многоугольник<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(c&nbsp;!=&nbsp;2)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(polygon_for_line&nbsp;(p,&nbsp;l)&nbsp;&gt;&nbsp;0)&nbsp;&nbsp;&nbsp;&nbsp;v1&nbsp;=&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;&nbsp;&nbsp;&nbsp;v2&nbsp;=&nbsp;p;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;представляем&nbsp;многоугольник&nbsp;массивом&nbsp;точек<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;n&nbsp;=&nbsp;s.size&nbsp;();<br>
&nbsp;&nbsp;&nbsp;&nbsp;vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;all&nbsp;(s.begin(),&nbsp;s.end());<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;j1,&nbsp;j2;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(it&nbsp;=&nbsp;s.begin(),&nbsp;i&nbsp;=&nbsp;0;&nbsp;it&nbsp;!=&nbsp;s.end();&nbsp;++&nbsp;i,&nbsp;++&nbsp;it)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(it&nbsp;==&nbsp;i1)&nbsp;j1&nbsp;=&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(it&nbsp;==&nbsp;i2)&nbsp;j2&nbsp;=&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;режем&nbsp;многоугольник<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;p1&nbsp;=&nbsp;all[j1];<br>
&nbsp;&nbsp;&nbsp;&nbsp;p2&nbsp;=&nbsp;all[j2];<br>
&nbsp;&nbsp;&nbsp;&nbsp;cut_polygon_for_edge&nbsp;(all,&nbsp;j1,&nbsp;j2,&nbsp;v1,&nbsp;v2);<br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col7">//&nbsp;если&nbsp;многоугольники&nbsp;имеют&nbsp;не&nbsp;то&nbsp;расположение&nbsp;которое&nbsp;нам&nbsp;требуется&nbsp;-&nbsp;меняем&nbsp;их&nbsp;местами<br></span>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(polygon_for_line&nbsp;(v1,&nbsp;l)&nbsp;&lt;&nbsp;0)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;swap&nbsp;(v1,&nbsp;v2);<br>
}<br>
<br>
<span id="col7">//&nbsp;разрезание&nbsp;выпуклого&nbsp;многоугольника&nbsp;в&nbsp;отношении&nbsp;площадей&nbsp;m:n<br></span>
point&nbsp;part_convex&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;v,&nbsp;<span id="col6">double</span>&nbsp;m,&nbsp;<span id="col6">double</span>&nbsp;n)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;area&nbsp;=&nbsp;abs&nbsp;(area_polygon&nbsp;(v))&nbsp;/&nbsp;(m&nbsp;+&nbsp;n)&nbsp;*&nbsp;m;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;a&nbsp;=&nbsp;0;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;v.size&nbsp;()&nbsp;-&nbsp;1;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;{<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;s&nbsp;=&nbsp;abs&nbsp;(area_triangle&nbsp;(v[0],&nbsp;v[i],&nbsp;v[i&nbsp;+&nbsp;1]));<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(a&nbsp;+&nbsp;s&nbsp;&lt;=&nbsp;area)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a&nbsp;+=&nbsp;s;<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">else</span>&nbsp;<span id="col6">break</span>;<br>
&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">if</span>&nbsp;(abs&nbsp;(a&nbsp;-&nbsp;area)&nbsp;&lt;=&nbsp;eps)&nbsp;<span id="col6">return</span>&nbsp;v[i];<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;part_segment&nbsp;(v[i],&nbsp;v[i&nbsp;+&nbsp;1],&nbsp;area&nbsp;-&nbsp;a,<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;abs&nbsp;(area_triangle&nbsp;(v[0],&nbsp;v[i],&nbsp;v[i&nbsp;+&nbsp;1])&nbsp;-&nbsp;area&nbsp;+&nbsp;a));<br>
}<br>
<span id="col7">//&nbsp;разрезание&nbsp;выпуклого&nbsp;многоугольника&nbsp;на&nbsp;k&nbsp;равных&nbsp;частей<br></span>
<span id="col6">void</span>&nbsp;npart_convex&nbsp;(vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;v,&nbsp;<span id="col6">int</span>&nbsp;k,&nbsp;vector&nbsp;&lt;&nbsp;point&nbsp;&gt;&nbsp;&amp;s)<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;area&nbsp;=&nbsp;abs&nbsp;(area_polygon&nbsp;(v));<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">double</span>&nbsp;a&nbsp;=&nbsp;area&nbsp;/&nbsp;(<span id="col6">double</span>)&nbsp;k;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">int</span>&nbsp;i;<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">for</span>&nbsp;(i&nbsp;=&nbsp;1;&nbsp;i&nbsp;&lt;&nbsp;k;&nbsp;++&nbsp;i)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s.push_back&nbsp;(part_convex&nbsp;(v,&nbsp;a&nbsp;*&nbsp;i,&nbsp;area&nbsp;-&nbsp;a&nbsp;*&nbsp;i));<br>
}<br>
<span id="col7">//&nbsp;ваша&nbsp;программа&nbsp;:-)<br></span>
<span id="col6">int</span>&nbsp;main()<br>
{<br>
&nbsp;&nbsp;&nbsp;&nbsp;<span id="col6">return</span>&nbsp;0;<br>
}<br>
</span>
<br></div>
<!--************** end ************** -->

<!-- begin of Top100 code -->
<script id="top100Counter" type="text/javascript" src="http://counter.rambler.ru/top100.jcn?1978219"></script><noscript><img src="http://counter.rambler.ru/top100.cnt?1978219" alt="" width="1" height="1" border="0"/></noscript>
<!-- end of Top100 code -->


<P class="textads">
Партнёры и спонсоры проекта:  
<a href="http://www.pfgfx.ru/" target="_blank">MetaTrader, форекс аналитика</a> - здесь!<br>
<a href="http://www.webservis.ru/" target="_blank">Бесплатный хостинг сайтов, доменов</a> регистрируйтесь.<br>
Бизнес справочник <a href="http://www.webspravochnik.ru/" target="_blank">www.webspravochnik.ru</a> для вас!
</p>
<br><br>

</body>
</html>

------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=style.css
Content-Type: text/css; charset=windows-1251; name=style.css
Content-Location: http://hardfire.far.ru/templates/css/style.css
Content-Transfer-Encoding: 8bit

body,
div, 
td,
th,
.button,
.cp_quickfinder,
.code_block,
.loginfield                       {background-color:#000000; font: 14px arial, verdana, 'trebuchet ms', verdana;color: rgb(200,250,0)}
textarea,input,select              {background-color:#000000; font: 13px arial, verdana, 'trebuchet ms', verdana;color: rgb(115,235,5)}
fieldset                            {background-color:#000000; border: 1px solid #FF9933;}
legend                              {color:rgb(226,255,66); padding:3px; border: 0px solid #ccc; background-color:#000}
label                               {}

h1, h2, h3, form                    {display:inline}
h1, h2, h3, h4                      {font: bold 17px arial,verdana, arial, 'trebuchet ms', verdana;}

a:link,
a:visited                           {color:rgb(0,255,0); text-decoration:none}
a:hover                             {color:rgb(0,255,0); text-decoration:underline}

/* _______________________ SEITE _______________________ */
html                                {
	background-color: #000000; color:eec00a
}
body                                  {margin: 1em 0; padding:0; font-size: .8em;text-align: center}
#body                               {text-align:left; background: #000; height:100%; padding:1px; margin: 0 auto 0 auto;padding: 10px;margin-top:10px; width:980px;}


/* _______________________ SEITEN-KOPF _______________________ */
#topheader                         {
	height:120px;
	background-color: #000000;
}
#banner                            {text-align:center}

/* _______________________ OBERE NAVILEISTE _______________________ */
#topbar                             {text-align:right; background-color:#eec00a; padding:2px; border-bottom:1px solid #000; border-top:1px solid #000;}


/* _______________________ LOGINFORM _______________________ */
#loginform                          {margin-top:20px; padding:10px; background-color:#000000; border:1px solid #ddd}
#loginform .loginfield              {
	padding:3px;
	border: 1px solid #ddd;
	color:#eec00a;
	margin-bottom:5px;
	margin-top:2px;
	background-color: #000000;
}
#loginform .button                  {border: 1px solid #eec00a; color:#000000; background-color:#eec00a}
#loginform  a:link,
#loginform  a:hover                 {
	text-decoration:underline;
	background-color: #101010;
}

/* _______________________ LINKE SPALTE NORMAL _______________________ */
#leftnormal				            { margin-top:20px}

/* _______________________ HAUPTINHALT _______________________ */
#content                            {
	line-height: 1.5em;
	position:relative;
	border-left:1px solid #ddd;
	height:100%;
	min-height:500px;
	width:720px;
	float:left;
	background-color:#000000;
	padding-left:20px;
	margin-top:20px;
	border-bottom-style: none;
	color: #eec00a;
	cursor: auto;
}

#content h2                         {font-size:18px}
#content .bull                      {font-size:14px; color:#eec00a}

/* _______________________ LINKE NAVIGATION _______________________ */
#leftnavi                           {float:left; width:224px; padding:15px;padding-left:0px; margin-top:5px}
#leftnavi ul	                    {display:inline; margin:0px; padding:0px; list-style:url(none0000.txt) none inside;}
#leftnavi li	                    {display:inline; margin:0px; padding:0px; list-style:url(none0000.txt) none inside;}

/* _______________________ LINKS NAVI 1 / 1.EBENE _______________________ */
#leftnavi a:link,
#leftnavi a:visited                 {color:#eec00a; text-decoration:underline}
#leftnavi a:hover                   {color:#eec00a; text-decoration:underline}

#leftnavi a.first_inactive:link,
#leftnavi a.first_inactive:visited  {
	padding:8px;
	padding-left:17px;
	display:block;
	background-color:#000000;
	text-decoration:none;
	border-bottom:1px solid #000000;
	color: #eec00a;
}
#leftnavi a.first_inactive:hover    {
	padding:8px;
	padding-left:17px;
	display:block;
	color:#eec00a;
	text-decoration:none;
	background-color: #000000;
}

#leftnavi a.first_active:link,
#leftnavi a.first_active:visited    {
	padding:8px;
	padding-left:17px;
	display:block;
	color:#eec00a;
	text-decoration:none;
	border-bottom:1px solid #000;
	background-color: #000000;
}

/* _______________________ SHOP - NAVIGATION (UNTERPUNKTE) _______________________ */
#leftnavi .shop_sub_div_active             {
	background-color:#000000;
	padding:3px;
	border-bottom:1px solid #ccc;
	color: #eec00a;
}
#leftnavi .shop_sub_div      {
	background-color:#000000;
	padding:3px;
	border-bottom:1px solid #000;
	color: #eec00a;
}
#leftnavi a.shopnavi_second_active:link,
#leftnavi a.shopnavi_second_active:visited {font-weight:bold; color:#eec00a; text-decoration:none}
#leftnavi a.shopnavi_second_active:hover   {
	font-weight:bold;
	color:#eec00a;
	text-decoration:none;
	background-color: #000000;
}

#leftnavi a.shopnavi_second_inactive:link,     
#leftnavi a.shopnavi_second_inactive:visited  {
	color:#eec00a;
	text-decoration:none;
	background-color: #000000;
}
#leftnavi a.shopnavi_second_inactive:hover    {color:#eec00a}


/* _______________________ LINKS NAVI 1 / 2.EBENE _______________________ */
#leftnavi a.second_inactive:link,
#leftnavi a.second_inactive:visited {padding:6px; padding-left:30px;display:block; color:#eec00a; background-color:#000000; text-decoration:none; border-bottom:1px solid #ddd}

#leftnavi a.second_active:link,
#leftnavi a.second_active:visited   {font-weight:bold; padding:6px; padding-left:30px;display:block; color:#eec00a; background-color:#000000; text-decoration:none; border-bottom:1px solid #ddd}

/* _______________________ LINKS NAVI 1 / 3.EBENE _______________________ */
#leftnavi a.third_inactive:link,
#leftnavi a.third_inactive:visited  {padding:4px; padding-left:40px;display:block; color:#eec00a; background-color:#000000; text-decoration:none; border-bottom:1px solid #000}

#leftnavi a.third_active:link,
#leftnavi a.third_active:visited    {font-style:italic; padding:4px; padding-left:40px;display:block; color:#eec00a; background-color:#000000; text-decoration:none; border-bottom:1px solid #ddd}

.container_pages_navigation         {padding:4px; border-top:1px solid #ccc; margin-top:10px}

/* _______________________ SEITEN-FUSS _______________________ */
#footer,
#footer td,
#footer div                         {font-size:10px; padding:4px; font-weight:bold;color:#eec00a;background-color:#000000;padding:4px}

#footer a:link,
#footer a:visited                   {color:#eec00a}
#footer a:hover                     {color:rgb(255,0,0); text-decoration:underline}

.title_navi                         {padding:5px;font-weight:bold;color:#eec00a;background-color:#000;}
.cp_quickfinder                     {color:#eec00a; background-color:#000; border:1px solid #000}

.logintext                          {color:#eec00a}
.logintext_error                    {color:#eec00a}
.clear                              {}

/* _______________________ PHP FORMATIERUNG _______________________ */
.code_inline,
.code_block                         {font-size: 10px;}

/* _______________________ FORMATIERUNG MODULAUSGABE  _______________________ */
/* _______________________ SEITE FЬR POPUP (MODULE)  _______________________ */
#body_popup                         {
	font-size:11px;
	text-align:left;
	background-color:#000000;
	padding:10px;
	margin:8px;
	color: #eec00a;
}
#module_intro                       {
	color:#eec00a;
	background-color: #000000;
}
.module_form_headers                {margin-top:5px; padding:5px; background-color:#000000; border:1px solid #ddd}

#module_header                      {
	padding:5px;
	height:30px;
	background-color: #000000;
	color: #eec00a;
}
#module_header h2,h3,h4            {font-size:17px; display:inline}
#module_content                     {padding:5px}
#module_content .formleft,.formright  {font-style:normal; line-height:1.5em;margin-bottom:5px}
#module_content  em                 {font-style:italic}

/* _______________________ MODUL "SUCHE"  _______________________ */
.button                             		{background-color:#000000; color:#eec00a; border: 1px solid #ccc}
.mod_search_title    		        {background-color:#000000; color:#eec00a; padding:4px; font-size:14px; font-weight:bold; }
.mod_search_text                    	{background-color:#000000; color:#eec00a; padding:8px;}
.mod_search_footernavi            {background-color:#000000; color:#eec00a; padding:2px; border-bottom: 0px solid #eec00a; margin-bottom:5px}
.mod_search_highlight              {background-color:#000000; color:#eec00a; font-weight:bold;padding:1px}
.mod_search_pages                   	{background-color:#000000; color:#eec00a; padding:4px; border:1px solid #000; margin-top:10px}
.mod_search_pages a:link 	{background-color:#000000; color:#eec00a; padding-left:2px; padding-right:2px}
.mod_search_pages a:visited  	{background-color:#000000; color:#eec00a; padding-left:2px; padding-right:2px}
.mod_searchbox                      	{background-color:#000000; color:#eec00a; margin-top:20px; padding:10px; border:1px solid #eec00a}

/* _______________________ MODUL "KONTAKT"  _______________________ */
#mod_contact_box                    {
	position:relative;
	padding:15px;
	color: #eec00a;
}
#mod_contact_box label              {
	font-style:italic;
	color: #eec00a;
}
.mod_contact_infobox                {
	margin-top:2px;
	padding:4px;
	border-bottom:1px solid #ccc;
	color: #eec00a;
}
.mod_contact_left                   {margin-bottom:2px} /* float:left; width:140px; margin:3px */
.mod_contact_left_star              {color:#eec00a; font-size:14px}
.mod_contact_right                  {margin-bottom:5px} /*  float:left; width:300px; margin:3px */
.mod_contact_right small            {font-size:12px;color:#eec00a;}

/* _______________________ MODUL "GALERIE"  _______________________ */
.mod_gal_imgcontainer               {float:left; padding:0px; border: 1px solid #ddd; margin:3px}
.mod_gal_header                     {color:#eec00a; background-color:#000000; padding:5px; border-bottom:1px solid #ddd}
.mod_gal_img                        {padding:10px}
.mod_gal_kbsize                     {color:#eec00a; text-align:center; margin-top:3px}

/* _______________________ MODUL "KOMMENTAR"  _______________________ */
.mod_comment_header                 {color:#eec00a; background-color:#000000; padding:3px}
.mod_comment_body                   {padding:10px; margin-bottom:10px}
.mod_comment_highlight              {border:2px solid #ddd}
.mod_comment_changed                {color:#eec00a; font-size:10px}


a.page_navigation:link,
a.page_navigation:visited          {font-weight:normal;color:rgb(255,0,0); border:1px solid #ddd; background-color:#010101;text-decoration: blink;padding-bottom:1px;padding-left:4px;padding-right:4px;padding-top:1px}

a.page_navigation:hover,
a.page_navigation,.page_navigation  {font-weight:normal;color:rgb(0,255,0); border:1px solid #ddd; background-color:#010101;text-decoration: blink;padding-bottom:1px;padding-left:4px;padding-right:4px;padding-top:1px;}


/* _______________________ OVERLIB-CONTAINER (TOOLTIP)  _______________________ */
.overlib_body               	{background-color:#000000;color:#eec00a;font-size:11px;}
.item_title                        	{background-color:#000000;color:#eec00a;font-weight: normal;}
.overlib_border                  {background-color:#000000;color:#eec00a;}

.glossar                               	{background-color:#000000;color:#eec00a;margin-right:10px;margin-top:2px; padding:4px;border:1px solid #ddd}

.formleft                           	{background-color:#000000;color:#eec00a;float:left;width:180px;padding:2px}
.formright                          	{background-color:#000000;color:#eec00a;float:left;width:270px;padding:1px}
.formright  small                  {background-color:#000000;color:#eec00a;font-size:10px}
.regerror                           	{background-color:#000000;color:#eec00a}
.absmiddle                          	{background-color:#000000;color:#eec00a;vertical-align:middle}


------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=tpl2.css
Content-Type: text/css; charset=windows-1251; name=tpl2.css
Content-Location: http://hardfire.far.ru/templates/tpl2.css
Content-Transfer-Encoding: 8bit

#fon
{
	background-image: url('images/metal-4.gif');
	font-family: Arial;
	font-size: 14px;
}
#main
{
	background-color: rgb(0,0,0);
	color: rgb(255,203,0);
	border: 1px solid;
	border-color: rgb(255,203,0);
	margin-left: 1%;
	margin-right: 1%;
	margin-top: 1%;
	margin-bottom: 1%;
	width: 970px;
}
#top
{
	height: 150px;
	cursor: pointer;
}
#top a:link,
#top a:visited,
#top a:hover
{
	color: rgb(0,0,0);
	text-decoration: none;
}
	#img1
	{
		float: left;
		width: 18%;
	}
	#img2
	{
		float: left;
		width: 64%;
	}
	#img3
	{
		float: left;
		width: 18%;
	}
#line
{
	height: 25px;
	width: 100%;
	background-color: rgb(255,203,0);
}
#selectline
{
	background-color: rgb(0,0,0);
	color: rgb(255,255,255);
	border: 1px solid rgb(255,203,0);
}
#medium
{
//	height: 200px;
}
	#leftcol
	{
		float: left;
		color: rgb(255,203,0);
		width: 200px;
	}
	#menu
	{
		color: rgb(255,203,0);
		height: 30px;
		border: 1px solid rgb(255,203,0);
		cursor: pointer;
		text-align: center;
		font-family: Arial;
	}
	#menu a:link,
	#menu a:visited
	{
		color: rgb(255,203,0);
		text-decoration: none;
	}
	#menu a:hover
	{
		color: rgb(0,255,0);
	}
	#rightcol
	{
		margin-left: 210px;
		border-left: 1px solid rgb(255,203,0);
		padding-left: 10px;
	}
#contact
{
	color: rgb(255,203,0);
	padding-left: 10px;
}

#col1
{
	color: rgb(255,203,0);
}
#col2
{
	color: rgb(255,153,0);
}
#col3
{
	color: rgb(0,255,0);
}
#col4
{
	color: rgb(255,255,0);
	font-family: Courier New;
	font-size: 20px;
}
#col5
{
	color: rgb(0,255,255);
}

#code, #col6, #col7, #col8, #col9
{
	font-family: Courier New;
	color: rgb(255, 255, 255);
}
#col6
{
	color: rgb(116,162,237);
}
#col7
{
	color: rgb(50,255,100);
}
#col8
{
	color: rgb(255,255,255);
}
#col9
{
	color: rgb(255,50,255);
}


------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=logo2.gif
Content-Type: image/gif; name=logo2.gif
Content-Location: http://hardfire.far.ru/templates/images/logo2.gif
Content-Transfer-Encoding: Base64

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
bspS+LsaQN2BAAA7

------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=logo1.jpg
Content-Type: image/jpeg; name=logo1.jpg
Content-Location: http://hardfire.far.ru/templates/images/logo1.jpg
Content-Transfer-Encoding: Base64

/9j/4AAQSkZJRgABAQEAYABgAAD/7RFGUGhvdG9zaG9wIDMuMAA4QklNBCUAAAAA
ABAAAAAAAAAAAAAAAAAAAAAAOEJJTQPtAAAAAAAQAEgAAAABAAIASAAAAAEAAjhC
SU0EJgAAAAAADgAAAAAAAAAAAAA/gAAAOEJJTQQNAAAAAAAEAAAAeDhCSU0EGQAA
AAAABAAAAB44QklNA/MAAAAAAAkAAAAAAAAAAAEAOEJJTQQKAAAAAAABAAA4QklN
JxAAAAAAAAoAAQAAAAAAAAACOEJJTQP1AAAAAABIAC9mZgABAGxmZgAGAAAAAAAB
AC9mZgABAKGZmgAGAAAAAAABADIAAAABAFoAAAAGAAAAAAABADUAAAABAC0AAAAG
AAAAAAABOEJJTQP4AAAAAABwAAD/////////////////////////////A+gAAAAA
/////////////////////////////wPoAAAAAP//////////////////////////
//8D6AAAAAD/////////////////////////////A+gAADhCSU0ECAAAAAAAEAAA
AAEAAAJAAAACQAAAAAA4QklNBB4AAAAAAAQAAAAAOEJJTQQaAAAAAANLAAAABgAA
AAAAAAAAAAAAewAAAfMAAAALBBEENQQ3ACAEOAQ8BDUEPQQ4AC0AMgAAAAEAAAAA
AAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAB8wAAAHsAAAAAAAAAAAAAAAAAAAAA
AQAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAQAAAAAAAG51bGwAAAACAAAABmJvdW5k
c09iamMAAAABAAAAAAAAUmN0MQAAAAQAAAAAVG9wIGxvbmcAAAAAAAAAAExlZnRs
b25nAAAAAAAAAABCdG9tbG9uZwAAAHsAAAAAUmdodGxvbmcAAAHzAAAABnNsaWNl
c1ZsTHMAAAABT2JqYwAAAAEAAAAAAAVzbGljZQAAABIAAAAHc2xpY2VJRGxvbmcA
AAAAAAAAB2dyb3VwSURsb25nAAAAAAAAAAZvcmlnaW5lbnVtAAAADEVTbGljZU9y
aWdpbgAAAA1hdXRvR2VuZXJhdGVkAAAAAFR5cGVlbnVtAAAACkVTbGljZVR5cGUA
AAAASW1nIAAAAAZib3VuZHNPYmpjAAAAAQAAAAAAAFJjdDEAAAAEAAAAAFRvcCBs
b25nAAAAAAAAAABMZWZ0bG9uZwAAAAAAAAAAQnRvbWxvbmcAAAB7AAAAAFJnaHRs
b25nAAAB8wAAAAN1cmxURVhUAAAAAQAAAAAAAG51bGxURVhUAAAAAQAAAAAAAE1z
Z2VURVhUAAAAAQAAAAAABmFsdFRhZ1RFWFQAAAABAAAAAAAOY2VsbFRleHRJc0hU
TUxib29sAQAAAAhjZWxsVGV4dFRFWFQAAAABAAAAAAAJaG9yekFsaWduZW51bQAA
AA9FU2xpY2VIb3J6QWxpZ24AAAAHZGVmYXVsdAAAAAl2ZXJ0QWxpZ25lbnVtAAAA
D0VTbGljZVZlcnRBbGlnbgAAAAdkZWZhdWx0AAAAC2JnQ29sb3JUeXBlZW51bQAA
ABFFU2xpY2VCR0NvbG9yVHlwZQAAAABOb25lAAAACXRvcE91dHNldGxvbmcAAAAA
AAAACmxlZnRPdXRzZXRsb25nAAAAAAAAAAxib3R0b21PdXRzZXRsb25nAAAAAAAA
AAtyaWdodE91dHNldGxvbmcAAAAAADhCSU0EKAAAAAAADAAAAAE/8AAAAAAAADhC
SU0EFAAAAAAABAAAAAI4QklNBAwAAAAAC40AAAABAAAAoAAAACcAAAHgAABJIAAA
C3EAGAAB/9j/4AAQSkZJRgABAgEASABIAAD/7QAMQWRvYmVfQ00AAf/uAA5BZG9i
ZQBkgAAAAAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwM
EQwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4O
Dg4UEQwMDAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/A
ABEIACcAoAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAEC
BAUGBwgJCgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUH
BggFAwwzAQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh
8WNzNRaisoMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1
VmZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyEx
EgRBUWFxIhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kST
VKMXZEVVNnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdH
V2d3h5ent8f/2gAMAwEAAhEDEQA/APLA0+mXdgQPvlTqpdYLNsQxu4/Iblu/Vv6r
5/Wul51+LU+30H1hrWgncYsdZH5u6tnv9ysfVX6u5vVX51FY22fZ2Enbu9h3b/Y7
970vT9v6VV8nMRiJ/wBQj/ncO37zNDCZGP8AWBeVU2slrzH0QD95hRcNri2ZgkT4
rpfq39VsvrP2qvGAfbU2l20aywuY57uPo7P+mpMuWOOPEfD81mPGZmh4vP7WtG4j
a17Pb31+j/1TUGJMDldV176tZXTum4zsql9Voqsc9r2wdwtbSwt2z9Nv59n6J/8A
1zYuaxaLsnKpx8cF11z211NbqS9xDWBsfyk3DljkiZDoTH/FTkxmEgD1AP8AjL5F
W2+0DhpPlwY4ULWFjoIgwu4v/wAX3WrsrIdRgWGlrbSA4xtcQfSFTm++79I33V/8
N/bWH9behZnRbMOvLbtstp3O026gkO9vt/6lMx8xGRhHW5Dr5L54TESlp6S4AEoh
qdtHnxz2MLQ6D0LqHV7bH4dL7mYux13ptL3De7YyK2brHf2GexdZX/i96wyu030u
pLPbWT9HYbHOG54G72+13v8Afs/7bRzczHHv0+auiMWCU9uuzwV7DXc5jiCWHaY1
EjRRDSQT4K31hrGdVy2VsNbWXPaGkyRtcW+50u9y3OjfUvqnVcA5OLQ6yp1O9lwB
c0uHr72D0g/9JW6pjHVfzn/byecojjjI/pAfitGMmcojpf4PNmpwoFpBDS4tB7HS
U1LN79viDHyEro/rL9Xc7o3ScOzJofjMySwit5BO9tLW3n870/03qP8Ap/4VVfqd
0q3qvVLMVgJaMe19ga3c7aAG+1o93845ib736qWSjpen6Sfa/WRh3rycM8qTGAwT
wTBR+p41+L1DIoyKHYtrHndQ9pYWg+5vsfDvoO9q3/q39WMzq2Fj5WPjvvpqynjI
fWwvLYGNtr2fn+p6u/8Akf4RPyZRCAkb17f3eJbDGZSMR0/i86KHiwB3tJJ1OkQY
lBXomb9Qs3Fqfddj211VV5ReWjeYl3o7XVO2++j3sb/1tedpmDOMploQY1fEOH95
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
SAAAAAEAAABBZG9iZSBQaG90b3Nob3AgQ1MgV2luZG93cwAAMjAwNzowMzowNyAx
Nzo0Nzo1MAADAAGgAwABAAAAAQD//wKgBAABAAAA8wEAAAOgBAABAAAAewAAAAAA
AAAGAAMBAwABAAAABgDj8RoBBQABAAAAGgEAABsBBQABAAAAIgEAACgBAwABAAAA
AgCbKAECBAABAAAAKgEAAAICBAABAAAAcQsAAAAAAABIAAAAAQAAAEgAAAABAAAA
/9j/4AAQSkZJRgABAgEASABIAAD/7QAMQWRvYmVfQ00AAf/uAA5BZG9iZQBkgAAA
AAH/2wCEAAwICAgJCAwJCQwRCwoLERUPDAwPFRgTExUTExgRDAwMDAwMEQwMDAwM
DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwBDQsLDQ4NEA4OEBQODg4UFA4ODg4UEQwM
DAwMEREMDAwMDAwRDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDP/AABEIACcA
oAMBIgACEQEDEQH/3QAEAAr/xAE/AAABBQEBAQEBAQAAAAAAAAADAAECBAUGBwgJ
CgsBAAEFAQEBAQEBAAAAAAAAAAEAAgMEBQYHCAkKCxAAAQQBAwIEAgUHBggFAwwz
AQACEQMEIRIxBUFRYRMicYEyBhSRobFCIyQVUsFiMzRygtFDByWSU/Dh8WNzNRai
soMmRJNUZEXCo3Q2F9JV4mXys4TD03Xj80YnlKSFtJXE1OT0pbXF1eX1VmZ2hpam
tsbW5vY3R1dnd4eXp7fH1+f3EQACAgECBAQDBAUGBwcGBTUBAAIRAyExEgRBUWFx
IhMFMoGRFKGxQiPBUtHwMyRi4XKCkkNTFWNzNPElBhaisoMHJjXC0kSTVKMXZEVV
NnRl4vKzhMPTdePzRpSkhbSVxNTk9KW1xdXl9VZmdoaWprbG1ub2JzdHV2d3h5en
t8f/2gAMAwEAAhEDEQA/APLA0+mXdgQPvlTqpdYLNsQxu4/Iblu/Vv6r5/Wul51+
LU+30H1hrWgncYsdZH5u6tnv9ysfVX6u5vVX51FY22fZ2Enbu9h3b/Y7970vT9v6
VV8nMRiJ/wBQj/ncO37zNDCZGP8AWBeVU2slrzH0QD95hRcNri2ZgkT4rpfq39Vs
vrP2qvGAfbU2l20aywuY57uPo7P+mpMuWOOPEfD81mPGZmh4vP7WtG4ja17Pb31+
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
6P0H6rZ3SMrGuyMnNfaYa1hq22VMob6hsdudw7ez00CCIR01G9f3UgjiOu/8X1nO
NmL0PIY7Jfk3WU2Nqvc1pLnvY70ztobXV6f5y+cGsc6wVsG5zjtaG6ySYG1d79Wf
8aDelfV5vR+pYb+pbHOrYTYGAYxb7aS4tse91b/Yz/gf+KXC5L6Dl22YjXVUGxzq
GEy5rJmppd+8xqbjjKMjfy8IEfOPFdykmcomI72Sf8LtF+jHPZg9JxaszNZ06yuh
rH2Es+kxjW2bPV+l6a8p/wAa+W3IzsFteeOpV112EXD0wGl7xYKR6DWfQp9H3O+m
tUf42+jjpuHjX9Ku6hdjMYx7smxmpY303X+pstdZc9o3e5n565z6+fWvo/1jZgHp
uG/CfjesL2uDQCHigU7DWfzW0u/NTIwn7kDXpHc5L+T93+aXynH25D9I+EK+b97+
cf/R8qSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSUpJJJJSkkkklKSSSSU//
2f/iDFhJQ0NfUFJPRklMRQABAQAADEhMaW5vAhAAAG1udHJSR0IgWFlaIAfOAAIA
CQAGADEAAGFjc3BNU0ZUAAAAAElFQyBzUkdCAAAAAAAAAAAAAAAAAAD21gABAAAA
ANMtSFAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAEWNwcnQAAAFQAAAAM2Rlc2MAAAGEAAAAbHd0cHQAAAHwAAAAFGJrcHQA
AAIEAAAAFHJYWVoAAAIYAAAAFGdYWVoAAAIsAAAAFGJYWVoAAAJAAAAAFGRtbmQA
AAJUAAAAcGRtZGQAAALEAAAAiHZ1ZWQAAANMAAAAhnZpZXcAAAPUAAAAJGx1bWkA
AAP4AAAAFG1lYXMAAAQMAAAAJHRlY2gAAAQwAAAADHJUUkMAAAQ8AAAIDGdUUkMA
AAQ8AAAIDGJUUkMAAAQ8AAAIDHRleHQAAAAAQ29weXJpZ2h0IChjKSAxOTk4IEhl
d2xldHQtUGFja2FyZCBDb21wYW55AABkZXNjAAAAAAAAABJzUkdCIElFQzYxOTY2
LTIuMQAAAAAAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABYWVogAAAAAAAA81EA
AQAAAAEWzFhZWiAAAAAAAAAAAAAAAAAAAAAAWFlaIAAAAAAAAG+iAAA49QAAA5BY
WVogAAAAAAAAYpkAALeFAAAY2lhZWiAAAAAAAAAkoAAAD4QAALbPZGVzYwAAAAAA
AAAWSUVDIGh0dHA6Ly93d3cuaWVjLmNoAAAAAAAAAAAAAAAWSUVDIGh0dHA6Ly93
d3cuaWVjLmNoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAGRlc2MAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVsdCBSR0IgY29s
b3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAALklFQyA2MTk2Ni0yLjEgRGVmYXVs
dCBSR0IgY29sb3VyIHNwYWNlIC0gc1JHQgAAAAAAAAAAAAAAAAAAAAAAAAAAAABk
ZXNjAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4gSUVDNjE5
NjYtMi4xAAAAAAAAAAAAAAAsUmVmZXJlbmNlIFZpZXdpbmcgQ29uZGl0aW9uIGlu
IElFQzYxOTY2LTIuMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdmlldwAAAAAA
E6T+ABRfLgAQzxQAA+3MAAQTCwADXJ4AAAABWFlaIAAAAAAATAlWAFAAAABXH+dt
ZWFzAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAACjwAAAAJzaWcgAAAAAENSVCBj
dXJ2AAAAAAAABAAAAAAFAAoADwAUABkAHgAjACgALQAyADcAOwBAAEUASgBPAFQA
WQBeAGMAaABtAHIAdwB8AIEAhgCLAJAAlQCaAJ8ApACpAK4AsgC3ALwAwQDGAMsA
0ADVANsA4ADlAOsA8AD2APsBAQEHAQ0BEwEZAR8BJQErATIBOAE+AUUBTAFSAVkB
YAFnAW4BdQF8AYMBiwGSAZoBoQGpAbEBuQHBAckB0QHZAeEB6QHyAfoCAwIMAhQC
HQImAi8COAJBAksCVAJdAmcCcQJ6AoQCjgKYAqICrAK2AsECywLVAuAC6wL1AwAD
CwMWAyEDLQM4A0MDTwNaA2YDcgN+A4oDlgOiA64DugPHA9MD4APsA/kEBgQTBCAE
LQQ7BEgEVQRjBHEEfgSMBJoEqAS2BMQE0wThBPAE/gUNBRwFKwU6BUkFWAVnBXcF
hgWWBaYFtQXFBdUF5QX2BgYGFgYnBjcGSAZZBmoGewaMBp0GrwbABtEG4wb1BwcH
GQcrBz0HTwdhB3QHhgeZB6wHvwfSB+UH+AgLCB8IMghGCFoIbgiCCJYIqgi+CNII
5wj7CRAJJQk6CU8JZAl5CY8JpAm6Cc8J5Qn7ChEKJwo9ClQKagqBCpgKrgrFCtwK
8wsLCyILOQtRC2kLgAuYC7ALyAvhC/kMEgwqDEMMXAx1DI4MpwzADNkM8w0NDSYN
QA1aDXQNjg2pDcMN3g34DhMOLg5JDmQOfw6bDrYO0g7uDwkPJQ9BD14Peg+WD7MP
zw/sEAkQJhBDEGEQfhCbELkQ1xD1ERMRMRFPEW0RjBGqEckR6BIHEiYSRRJkEoQS
oxLDEuMTAxMjE0MTYxODE6QTxRPlFAYUJxRJFGoUixStFM4U8BUSFTQVVhV4FZsV
vRXgFgMWJhZJFmwWjxayFtYW+hcdF0EXZReJF64X0hf3GBsYQBhlGIoYrxjVGPoZ
IBlFGWsZkRm3Gd0aBBoqGlEadxqeGsUa7BsUGzsbYxuKG7Ib2hwCHCocUhx7HKMc
zBz1HR4dRx1wHZkdwx3sHhYeQB5qHpQevh7pHxMfPh9pH5Qfvx/qIBUgQSBsIJgg
xCDwIRwhSCF1IaEhziH7IiciVSKCIq8i3SMKIzgjZiOUI8Ij8CQfJE0kfCSrJNol
CSU4JWgllyXHJfcmJyZXJocmtyboJxgnSSd6J6sn3CgNKD8ocSiiKNQpBik4KWsp
nSnQKgIqNSpoKpsqzysCKzYraSudK9EsBSw5LG4soizXLQwtQS12Last4S4WLkwu
gi63Lu4vJC9aL5Evxy/+MDUwbDCkMNsxEjFKMYIxujHyMioyYzKbMtQzDTNGM38z
uDPxNCs0ZTSeNNg1EzVNNYc1wjX9Njc2cjauNuk3JDdgN5w31zgUOFA4jDjIOQU5
Qjl/Obw5+To2OnQ6sjrvOy07azuqO+g8JzxlPKQ84z0iPWE9oT3gPiA+YD6gPuA/
IT9hP6I/4kAjQGRApkDnQSlBakGsQe5CMEJyQrVC90M6Q31DwEQDREdEikTORRJF
VUWaRd5GIkZnRqtG8Ec1R3tHwEgFSEtIkUjXSR1JY0mpSfBKN0p9SsRLDEtTS5pL
4kwqTHJMuk0CTUpNk03cTiVObk63TwBPSU+TT91QJ1BxULtRBlFQUZtR5lIxUnxS
x1MTU19TqlP2VEJUj1TbVShVdVXCVg9WXFapVvdXRFeSV+BYL1h9WMtZGllpWbha
B1pWWqZa9VtFW5Vb5Vw1XIZc1l0nXXhdyV4aXmxevV8PX2Ffs2AFYFdgqmD8YU9h
omH1YklinGLwY0Njl2PrZEBklGTpZT1lkmXnZj1mkmboZz1nk2fpaD9olmjsaUNp
mmnxakhqn2r3a09rp2v/bFdsr20IbWBtuW4SbmtuxG8eb3hv0XArcIZw4HE6cZVx
8HJLcqZzAXNdc7h0FHRwdMx1KHWFdeF2Pnabdvh3VnezeBF4bnjMeSp5iXnnekZ6
pXsEe2N7wnwhfIF84X1BfaF+AX5ifsJ/I3+Ef+WAR4CogQqBa4HNgjCCkoL0g1eD
uoQdhICE44VHhauGDoZyhteHO4efiASIaYjOiTOJmYn+imSKyoswi5aL/IxjjMqN
MY2Yjf+OZo7OjzaPnpAGkG6Q1pE/kaiSEZJ6kuOTTZO2lCCUipT0lV+VyZY0lp+X
Cpd1l+CYTJi4mSSZkJn8mmia1ZtCm6+cHJyJnPedZJ3SnkCerp8dn4uf+qBpoNih
R6G2oiailqMGo3aj5qRWpMelOKWpphqmi6b9p26n4KhSqMSpN6mpqhyqj6sCq3Wr
6axcrNCtRK24ri2uoa8Wr4uwALB1sOqxYLHWskuywrM4s660JbSctRO1irYBtnm2
8Ldot+C4WbjRuUq5wro7urW7LrunvCG8m70VvY++Cr6Evv+/er/1wHDA7MFnwePC
X8Lbw1jD1MRRxM7FS8XIxkbGw8dBx7/IPci8yTrJuco4yrfLNsu2zDXMtc01zbXO
Ns62zzfPuNA50LrRPNG+0j/SwdNE08bUSdTL1U7V0dZV1tjXXNfg2GTY6Nls2fHa
dtr724DcBdyK3RDdlt4c3qLfKd+v4DbgveFE4cziU+Lb42Pj6+Rz5PzlhOYN5pbn
H+ep6DLovOlG6dDqW+rl63Dr++yG7RHtnO4o7rTvQO/M8Fjw5fFy8f/yjPMZ86f0
NPTC9VD13vZt9vv3ivgZ+Kj5OPnH+lf65/t3/Af8mP0p/br+S/7c/23////bAEMA
CAYGBwYFCAcHBwkJCAoMFA0MCwsMGRITDxQdGh8eHRocHCAkLicgIiwjHBwoNyks
MDE0NDQfJzk9ODI8LjM0Mv/bAEMBCQkJDAsMGA0NGDIhHCEyMjIyMjIyMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMv/AABEIAHcDAwMB
IgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJCgv/xAC1EAAC
AQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQz
YnKCCQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpz
dHV2d3h5eoOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbH
yMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T19vf4+fr/xAAfAQADAQEBAQEBAQEB
AAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncAAQIDEQQFITEG
EkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6
Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeY
mZqio6Slpqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery
8/T19vf4+fr/2gAMAwEAAhEDEQA/APFcbRnP5f5/zmlUlQQT0Hr070nVemeOoFO2
gd/bPpWxI/APpjOMD69v89qYBjrjB544+nBoI654xzn/AD+FA7/XHDf57UgEAwD0
yozjn86VRvcd8H0/WkXlcHgEdT0qeKInHH4HrTQEjc7RxxUsMX+iN1HTv0qU24GO
O351ftLbda5/X0+tUkK5e03Ti2lTyhQQBnpmsaeArEmMD5vX3r17wpoif8Ihe3Ms
OQYtoz6k153f2Pljy9pwHPXuOKbWgkzlplxIp55x+P8AhVdshgDnnAwf8/Stm6tS
bjGOnU1TltMZIBx9fapsVcqE55OfqOx9f59Kay4+bgew/wA+lPdQhx90cYqLPPyj
J9R+n9KQCmPGO+B/hz+tBfAyMZ7YP9KGwFAGVI/r/wDqprHPPPJzn/P4UAKACAT6
9h+tV77/AFKfXPFWFAJI7H34NQX/APqVOc5bJqZbDRSjBZsA44plSRgncO2OajrI
oO1KBkgZxSquc0lMRI4CpgPkZ6VFVkwP5Jm2jYDjNV2GDSTuNoSiiimIO9LQOtDH
LGgBxVsA4plWRgWm4A5z1qFGKOrjqDmkncbQh6DpUtsrNOoVtp9akvZRPcGcR7A4
zgUun7TexqwGHO3JPTNS37tykvesVpQVlYE5IJFMqa5jMdxKh/hYj9ahqk7ol7hT
4tnmLvGVyM/SmUo6imJE11GsdwwQYTqv0qHvWjrUbR6kwbHzKrDAxwQMVnYqIO8U
ypK0mgIxUgA2E+gpGHzDIPQVMAC7Ko4wM02wSKtFKRikqiQooooAKUAkikpxGFU5
60AOI2uAeo60wjFSRgsx+YA46019xVcikMlturA7ipX5sHtVerECsVZlA4U5ycVX
oW7B7BRRRTEFFKBk8U7bjqOKAGU5Rk02poFLSBR3pPYaIj1pKmnjaKQhh15H0qGh
O6uDVmFOXO4U2pIlJbPpzQ9gQrxbJNpNRVeuIX81CwyXAI9DVM8E0ou6HJWG0UUV
RIUUU8rhBnHNADQMkAU5wd2O9TW0Zclu49qjKsspDdT60r6jtoR1JFhX3MCQKaRh
/YGpoCTvVepGKTegJakBOST0ptKRgkHqKSqEFKKSpIhmQA0MBhGD1owae4+UcdOK
WON2VmQcAc0rjsR0lOUbjjNG3Kk+lMQ2tKFf3KHHG2s2tSPm3jz/AHep78VcBMch
z8v1xipNo64GM5zj2pgBGD+nqf8AJpRkcAnPT/61WITZtJB47Anp7n/PrQFPOAe/
OM8UucdSOnT1/L8qFOXGT83rSAGJOQBj1AFWmHyDruz1/lVeOP2OTxV1YCVX3/wq
gGQR7kkPBHPPTHPT61r6PYmVXYqchSeBjtVezt98bH1yM/5/zxXoHgPQkvoZzIMR
BGLY9hTSE3Y86nhKRyYz97HNUbgcqcYx2zjFdTqViYGuIyeRJgYz05rDvLbbsXnJ
7evv+dJoaMtvlOOMc/56/SnHGBzj8cYx/n9ammtzu5wRx0/GoiCg5POOf8/nSsBG
yd8DI6jNN2Yweg9x2pzEg7SSO2OmP/rc0u75AQV69PQc/wCNIBAFA5HQc8Z9O9Cl
mbcAeD06/wCe9NPTqenA/wA/54oHBPHbpt6UwJT5fGT2HU47fSio2fDHG089wDRU
XECgFBwPqaC+OMH8uPy/WnIDtHP8vw/p/kUDAY+/ft/+qrGMHykex9KftyP1GT1/
z/k0rIM45A59+Mip4oiV6Yx2NADYISzgYDE9/wDGtO2tNxUFeeOKLK3ORnPXqe1d
94Y8JXGpyK0cJKg/MT2q0u5LkctPYNHDkr9RW7ouh3FxZr5MEjE8D5fevVm8IaPp
lkLnVGDhADjpmrOlavbXMRi0uxjSMfLnFF+wnIsWWlpZ+EmtAmC0fzjpzXm2uaI8
6I0Ue9gemMV65FbzyWpR3+8vP+RWZPp0liySIquVHCsM/wA6E0Z3aZ4RfaZJDebG
iZWB5yDWfc2TJ/Bwuef89K98eTRdZumt7q0WO4PG736VzPiHwF5cbzWb7lwflHp9
PpTXmXznhV1CY5sYx644qptBzkNxnI9v8jH4V1GsabJbXDpKmHHB4x/+qsBoWVmD
Adf85qZItO5VYHAI3A/Xoab2wCwzzVq4i2qxPBxjmqpzvJ5Bz6frUjFHB75A65x+
VV785iUdcN/jVnnGMY9B/wDX/Oqt/wAxIc554NTLYaGWAJeQjoEORVZ1w5FXtJYC
4KspIddvAptzbhrhiowvYZrm5rTaZry3gmVEwG+bOB1xSwoJJ0UYALfxGp7eNSs3
G87SFFRW8ZedFwDlscmqctybbG5FbIbO/j2kqzZjK9iKwJRhyvpxXfNpix+Gb24k
YxbpAPLU8npjH4/1rhbuPyrqRBnhj1rmwlVVHK3f/I6MRTcFEr0UUV2HKOTlgPeh
1KuQetOi/wBamfWnlR5zAcjmk3ZjtoT7N2lhhxtbJqqoyhzxWvBEINCeRyD5pIC9
8/5FVFhxasXzyOvqaxjPf1NZR29CaC3d7GFmaJl3H5P4xwDn6c1Q/wBUCynkNkEG
uksdPX7JazLF+6YEOSwJBz3xWLf2otp7iOPJjVs8jp7VFOqpScSp02oplOWRpWd2
zljlie5qKnsMAcUyuleRgwqzZW0l3dxQRKSzsBwOnvVatHR547fUYnljZ0OVKrye
Rjj3pTbUW1uOCTkrk2rSXMuqSC4kEzxIELDHQVShRG2lwMFvzq5cWFxpl+Yp4goL
cBmGdvY/lUE9sUKuHEilyoweTWUHHlST0NJJ3bZBcYMoK8ZPQcYq15Dssk6qY02g
Aepx1qOVCIBvBUh84I7Gty2to2Zz5zSxNEBwDxgc4FTUqcsUOEOZnLHOaSrV0hTC
kcfSqtdCd1cxasFFFLTEPRVZWJbBHQetPYZRAByeBjvRChdSMAjIJ9RVy7AhvYXM
bCIMCAOMgEdM1DlaVi1G6GyAk4VMeXGA25QpB71XAY2xGCRng9hW1qtnIl4XYnFy
gmQbskIemfwomgjNjbbUO8ZVjngfX61hGsrJ9zZ03dlaGO2tdHupJtrTyMqxIQeO
pJ+lYp6munv45brRVihTcIGMjHaBxjk571zB61dB8yb63IrKzSCiiitzEcuRyOoq
fy/MBAGWpgTMWV6mrf2WYbGaFk4OWzwTUSki0ihg5q9Z2bSzogVgcEl0GQKqlAzM
ecZxmtzTRJYXSQSQuwuocFF+9jqD9KirNqOm5VOKctdjN1a3a3vcHcQVBye9Z9b/
AIkSFWtysgabZh1U8CsA9adCXNTTFVjyzaCpYATKADyeKirT0WKKW5bzVDBU3cji
qnLli2TBc0kh14hFvEnzfIofLDHHtWY2CxxxXX6jp8kupLEcr5qDHm8cD0rlbqBr
e4eNhjBOPcVjh6imrGtaDiyCiiiukwFqyygomQeRxVati/snTT7WQYxt5OTnpWc5
JNJ9S4RbTZmwMyOByAfarc1vK9xDuZSXXcPYc9asaZZSXE7ATrEVj3BiOp44q7PB
cQ6sI5QfPaHcWxjK+orGdVKVlvY1jTbjdmJPEAGcZKg8mp7TyluGlw21VzytW9Qt
3t4AyKxRz8zDtSyeXHobyqpk3kRCTPQj/wCtR7TmivPQOS0vQwpG3Su2MZJOPSm0
HrRXUc4VbtIWZWlH8OcfXFVK09GLPepBgFZM5H4VFRtRbRcFeVioVPk54OefpVi1
SU7liQnMZ59Pepry3lWV4Mg7GILEYFXdMtiJEDZJcbRt/OsZ1EoXNIwfNY54A78Y
5pQOG68VdeAR6j5e7gkjK96BbSrDLIoOwfKcVr7RGfIzPrUgH7hT3wO3+fesutW2
H7lDxnA59OlbxM2PyoGMjp3pNx6nP4kdKXA3DIAHoT/OhkwP8g9KsQu0nIHfsOad
Gm9snOCc5/z3p0SZXA59SO30q5aw7nyRx1+v+f6UWALe2yMDjFav2IiBWKnA56Vo
6ZpEl3KoC7jnoO1ej2Xw6mvLRTLthTbks3cVdrE8x5xpNgWhckZBzXs3gbSFtPDM
8hABnjYDPUZH50aV4e8N6MhhDi5lX72BnJrpbRz9nMcUGyPkKPbpQ30Jk77Hj/iH
RtsckoXDBvmPrXH3tltZSBycAZFe53GkhTunhyhYlsDt/niqt54T0DWXUwyCGbaP
kI5puwlPueFT2u0YIPXP4Vi3cRRsdM/p716/rvgi7sAzLGJIh1x3/KvOtUsGjk2u
rAjjBGKGrotSucyUHOMfTP8An/IpWBIwCDnI47n/AD/npVhkIkbjn1pHhwgwPlxW
diir1BOFPfr0pVBGB078dvf9KD2PoMmnABiQR9fb1oAYxJPBGO1FK4y5PrzRUhck
jXC4zj6j34pSvI4GTQh46DIxjvUioXIwCSDyO9WA5Ytzcc/X/P1rQtrchD3LcfSn
2llI+Nsbk5HIU102kaFPdzCJYHyx5yhH86tIls0vCHhU6hcGVwRCmCffPavadMht
7WFIbYKqr1wOvFYOm2J0+xWGOJlQLzz7dfarlpfRxWzHcARjnPIq5Rujmcm2Z3jj
URMy2qsWAGCB0yf/AK1WfCirBZhRwQeB6CuM1zWFj1OWNyGd2ypz94V0nh682RBn
YBG6dqaguXQbdj0SIgxjH3eoHTiqOqSRrDhu3v7f/qpltqC+TzyAODntWTrOpLLE
ydPTHfPFYRg+Yu6cTkr+4xqiyr94NlSPXt9a6ux1IXVpv4LL1Hf/ADxXn+s3qQFn
+7gZJNaPhDVY5mMbsE8w4UHnnn2+tdNlYzdx3izw1BqqmVFAmCnpwT615Ne6XLbz
MkqYZfbtXvl/bS4BCnaw4xzkd65HxD4cM8Uk6wNv9cHPSpaTRVOTWjPIbu2xEcKB
8vp2rGlj2kjbz1NdzqulXCKubdiD1+U4rlr+zeJxujcN3yuMVi49TouZ6EAKvBOc
49aq3pJgTJ53c81aJ6DPBIHP4cfSqt9/qU69f/rf0rOWxSNPwjbtcavEkab5CDtX
GcntWpqultb6q8E8bJcz8svAGa2fhFpKXmqG7jMbSw8MDyyhgRwP616B4g8EprWp
SCSwuC1vEri4RcDBY454ORjP+TXzuKxbhino7JWfruexQoKWHV3qfP7pJbzTopBK
5GQO1QxIrMvUnI4HU10NzaeVqtzArsirI8bMi9x/T3qKwRrDVbR2KjdIqgscY5HW
vTVdct1vY4XSfNbpc6/WPD0t3cXNxZ7mVY180ZwVwff8DXBa7Z3Frdg3EezePl4x
kDvX0hY+FraWe8eJZXSdAFiydqkdTkd68d+J9sbWa2UxKqvJIF7EBTjle2e3rivJ
y7E1PaRg9n/kehjKMOSUlujzqig9aK+hPGJIVLOMA8c8CrsKxyXDmT5RtJ54yaNI
XfcleORWnZ6danWBHdg+XtJJB6YGc1z1aqi2n0RvTpt2fma39iZ8HxO0H77zOX25
IOeOf93FZ76VI2kNIw2kZ2H1x617L4f0S21bwwsdnma2YjyzGuQccfzpuqeAFSAW
20RAZOxiT19wa8GGYTi25RdrnrSwkHZJq9jidD0hrrRLNLuR4ZFQLFEqD5lODuPr
1P5Vywt7lNWkt0klctM0DYj3ZOCMDP6V694d0G+t/DQa9jcSRTMkbPnhemBntnNc
Fc2/9i3V496Ekn80qDGx4OOpz069aKGIl7Saet9l6voOrRjyQa6bnnE6AZ2MxVWK
4ZcEfWq9W7yNEYFC5DE8t1P1qpX0kXdHhyVmFX9Ljke8j8tWYk4+UZNUK7/4Z+Hb
3VdTW7js2lto32lz93dgZBP0NZYmp7OlKRpQhz1FEs+JtHt9S1mD7AjeVFbDztv8
JAJOAce341yt1Db217bESvKx5fK7cH2r1+bwnPHeKszJPdOzpiMnZ83AA9cdqba/
CrX72xXTNUgtUaKZmhdGztX1Le5zx9K8bC4t8vLq0tPz/roepiMOr30Tev5HnniF
I30yNoZl3yKokj8sDLAfr9an0PSJis+xPLuIUCSox/i56e9eoa18PAjaakWl70ib
dK6lj0x3/XHtVvTfDAsJLlVtJEkkO6UyndvJ7+1c9XGShS9mou/p/XQ1p4aM6nO5
Kx8+67DJHcZfvzWPXc/ELSlsdXn2IYwvBQnoc9vzrhq9/CVPaUVJHj4mHJUaCnLn
cKbW34U0Z9f8R2enIG/eEk4HYAn9cY/Gt5zUIuT2RlCLlJRXUS001vPEk6t9m3Ks
kgGNmelaOo28N1YI1tMXKSeXs6kjH3vzrutS8I6v4fvIFi03DK2+PzACJccbeOvW
uiuPAWu6vpls50+3tLhBtwuAEbqSQBnB9v8A69eNPGSlUTS/4Hqj044aKg03/wAH
0Z5rp2iRXWopEkks8qxAzq7YwAP6Z6VaudEMWnO+2UL5mFO35SPrXpsfgqbTtaY2
9qixmMNM7BirlsggHHPQVPf+GnFvBEQI4VJyQcqM89OtefVxlWM02nbQ7KeHpuNr
q55vIILDwrcXayQxzpCI1WRchmPGB6HHSvLSckmvZ/iDZz2WkXdxDNGsb4jZcDkY
4AGOK8XPWvWymSnTlU7s8/MVyzjDsgpQM0lSwlRNGWAKhhkH0r1TzkatzZeTYwwh
T5shX/69bS2WLmzj3tKpiP7tFxjJ71v33g+WfRtOv7G6RnnYHYBuRF78jkADqa76
w8FXrX+nLFaQyQJb7LiYna68cHHHXH614NTG8yShq9dD2IYXlbc9FoeCzWrrcy3E
cMgt4pdrEjoQeld74psY7HxXp9yAY3mUKpznGRjkduta3iDwJPc6re2lrY/Zr2GY
SKxdjHdRnJGBjg/145611j/Di/urLRDPG8k0EDJcSSMCyttG3b6gHIqamIdWUZJO
8U0111SHCiqaab0dmn6M8G8U2aWGtSQRyrINqvwuNpIzisKu1+JtobTxU0ZjeMCJ
RtdgenGRjoP65riq9jCScqEJPsebiYqNWSXcK0tChluNYtYY0kcO6hlTP3c85x2r
Nrsfhtp0uqeLYbaCF5JShZSpACYwMnPbn88VWIk40pSXYmjFSqRT7nXahpJt71by
aM740zjGcHFeV6hcm7vZJeME8Y9K+ifFNld2Rl8y0ZYZdlusqglQWOMn27Z6Cvn/
AFnRNS0S5EeoWU1t5hJjMkbKrjPVcgZFeTlEpNyVTdHoZjFJJw2Zl0UHrRXuHlEs
KGSVFxnJ5rtdbt2is7NZljhjMG7y0GMj+E/WuLtpBFcRuRkAjI9RXt+q+Db7xTZa
TqWnWwllayUfZ2Ozco5+90B56GvOxtRwq009nc7sLBSpz7nG+GdDuZdQgi/dpFOj
BmlGCB1GAe/StS80WGPxlHC/zyeSABnhxjA6+gBrrofDWs2PimG0hsh5Kwb2d0Py
cYG0njPGOa3b74ey3Gr22rCWRZFC7lcBskfQ8ZFePKtWqVHJJ2t+PmelGFKEFFvq
eUa7Ym2NvBHEjoZQrkjJPoB2/wA+9S/2NKunT2NzaRQASHMWAcjghjivUNV8I6jK
+n28carB5wknGOdo5GD2rE1601Gx0i9uWUR3OJQJVUN8qjIJ98YrP6xWjGMWrO/n
uX7GnJycXfQ+fplCytt+7k4+lR1LOrLOwfOc85qKvrFsfOvcK1/DyW76ov2iQx4R
jG2D9/HHSsivUfhh4GbxHZ31y1q3yoFilfI+Y91/Lk+9YYqpyUm9flubYeHNURz1
xavLYGKY+Zduu5SF6ntz71attFurvQYA1vKkqSYBAwT/AJzXoV38N9QhvJwLd2ji
hDJcMMhXxjAxitXwt4NuIvB9tLJYyLOyNLLHJk4Zj1GfzwK8WpipqHuRd072senC
hDm956bHit3b41cJt3SDqpHQdzV+DSnTR7vUNgbyidqsvB9h616rZ/CvURNJPdG1
eOWMeWQuXTnOCSOP1qXUdEl0vwJrsMcDtLBbykOinPQ4I+mP0qqmKqJxgo9hQoQf
NJvufN56mte2BMCD/Zx9OKyT1Na9tgwJz/CORX0cNzxWPZfmzznPH1p4TIGOV7fl
R97p/e+uKuW8BY5/EfpWthC20PJZgdoHeug0PRJ7+6jijTcW5JPYd6isrAyMAF68
Ae9eseEtIj0uzWVwDM69W6qK0jEyqSsb/hfw3a6PbIxTfOwG4tzj/GtDxXqbWWlr
HE2x36/Ng4+tMsbgZcs/I6enWuV8UajHLfMkxICqMKfTNHJeWpkpXLfg62ADySZd
jzlj1/CvQ4EUR4Vf89a868NXSggAfKRnPrXeWd0nlhCeR096mrBocZakl8iG3IOO
OnFeeau4g1FJYW2MG+8Oldrqt7F5TKrjfgHr27/zrznV5l3b3bLY7cn/AD/ntTpR
dtQlvodxaagl9ZfOc8AMp6fr9a4Txl4UjvB9ps1CkHkAcEVb8L6mJ7tow2VYfdHA
6/8A1utdDehkA+XOOcfp+daOFnYm7TPnu7sHjlZHUhx196qz2+I8kn3I616p4i0A
T5uExkDPA4rhb6z8mAcEEcdO9ZygdEJXRxzqVHPUY7f596RRlcHPoOPr/n8KvXcB
TDDtx65qjjA4AOOR/n8qytYsY74c5zRSuCHIHQcUVnoMkBIUf55qxBceTMjhckVW
c5QMvHf1pqN7dufwrW4j1LQPFNttjS5tIyP7yLzXqGharpF5GBEUibGQCByfrXzf
a3XlHcDj6f1rtNPu5I4VfdgkA5HBrRamUont/iLUIdN0c+QVeST5R615Xq/iCSCD
7P5n70/M3JAFRtqsl35MZmYBCCM9q4m8vWvNaKlhkvtz2/CmlygonQ3LtqV5pu1v
MkY7XOM969S1DTG0zSonLZIGTjtXjOua1N4Y1G2gtEjd41V2d+QSeeB+VegaN8SL
LxTpLW92VhvQB8p6H1xUqetglF2N3T9dj27DJll7A9ulMguF1PUWijJJJHOMjrXN
Q6bdSyTGHkbd2R3FX/DV5baUZZ9QlCopJ3sfzHNadbmfLZE3xA0J7TQjOG+c4zjr
iuBa7awktfs7lPLRW9AT1/8ArVp+PPiuuoltP0yNJLcHBlY5zXO30bf2Pb6gcKZF
+76ewrPmNIxdj3vwnr66xpMEZ2mVRhu/5V0cwtYlLSNGpPXIzXgngfWZIbgKsny4
zWprmuzyyyR/aHaPrtzx/wDqp+zvqJrU6nxN4m0bT0IEMdxJ2UcDNeMeJvEzajKw
S3iijHQIOtTa1etjlgc8EfzrlLltzEkDPqKUnbQuKInY7s5yc5yKrXpzEv15qwMF
sc49MdfyqvfACMckktnn6VjLY0R9D/AG0ni8MSztbiKGViQ2OZCDjd6+o/DjvXsH
Y+ntXl3wIvIbjwBFbxqRJbSSI7Z4JLlv5MP8mvTpQ5idY2CyFTtJ7GvPpaKXq/zO
qerS8l+R89+NPLvvGF9KttKYopPKDqM8ADk/jkVg6PpIvvFVosqRtbW9wjTR45UD
5iWz6nAx717FqvgXVNRZpRexwyuwebGcTYPQ1bTwk51K3kGI1yPM2Ljeo45zXhp4
lL3Yb6HrfuHvLY7SCNYoVQdMfnXhfx/8OOVtdbt13KCftTM/3c7FTAPrjt6V7yOg
ry745wu/gkvHAkm18uWP3QO/+fy7j26nuKLXRr8Xb9Tyoe82n1T/AMz5aPWig9aK
7TlLVgGa9iCnGWAzmu8srOJ/ENnDNHJt2knyuWx/h3rjtASCXWLeO5kEcTNgtjOK
9x8L2NrH40S3mCi4mtSsQ8rGfuk/oDXkZjVaqKC3aZ6WCgnBzeyaPV/DNnDZaNFH
bxCOLGUUDGBWxgegpsY2oAe3FVbfUI7u+uLeGSJ/s52yBXyyt6Edq6qSjShGDOeb
c5OY7UIVntGRs49q8F1wzabrLmCETyTXjqXdNwK4xj0OOmBX0G6h0KHoRXmt9aGw
1GCBUikgYyEb1yxk7Yry80XJKNS111O/APmThc+dNZtDYrNHNzulOzZwB1rArqPF
7Xkt2013BJCzzOSrggqfQg81y5617OGbdJN7nm4hJVGkFfRn7PD27eH9XtAweRbh
JHQ4OAVxnH4EV8517L8BNUis9ee2lVS12PIiKj51I+Y59R7+wp4iySb6P/gCo6tp
dj6MFtANpEMfycqdo4+lScDnijtXC6vpetprGpX1tNKkbwhUKtldpXByD3rlxNf6
vFSjG/ob0aXtpWcrep3YOQCOlMkUOhU8ZBrjvAuk3un2IE99PKg6Ru5KJ6BR2Heu
07VpQq+2hzWsiKtP2U+W58tfFeGb+17kTQ7Z0wJGyPnIIGeO2BXlx61758arW2Oq
SzKy+YbTcVVMEMM4JPcnp9BXghOSTSwC5abp9nYeL96an3Qldn8LvNHj/TDHFJLG
HJmWN9hKY55zyAcHHfFcZXpXwUltYvHMP2lcs6+XEcZw7Hj8OO3+Nb4l2oy/rcyo
fxEfVRAIGQD3p3FA6DvXgvxu1DxRpviC0vbXUpLLTUXyYPskzRyFmXLFsYz6f/Xq
ZSs0u40r38j3klSduRzVa7sobpDvTcwHHNfNHgn4geIINVt5J9UubqIMfNjmfd5g
PGSzZP8A+oV9O27mW2jkYglkDce4rLmVRunNGlnBKcWePfEqztrPwvrMuoWSOFUN
ApGTG7HarD6bv5183HrX198UdNsdQ8G30F1NJA06hUkRNwDKQ67vQZXnpxXyEwwx
GQcHqKnAUY0Oemn1v948XVdXlm10sJTl5wKbT06ivQOM+vvhloVnovg+GCydnhmU
Sv5gIfeVG4Hnj6dq7XFc74H0+803wbpkOoytLfNCJJ2YgkM3OMjg4zjPtW3d3KWd
rJPIcIikmuKl7lJOb9WdU/enaJI0aOQWVTjoSOlOBBXI5Brz2XUPEWv2d3p8tu1m
pICXMXziUHkkD0HQjv8ArXL+J/CuueC/h9qEmg3t2sqlZZpEZvMSMfeKsDkYx74U
GuanjVUlanF2dtfX+v6sbzwvJG85a66Hl/xZvPtnju/zFsaOV4/qFYqP0GfxrhKn
ubme8uHnuZ5J5mOWkkYszH1JPWoK9OlDkgonDUlzycgr1j4CWEN340lneXbNbQb4
0XOWBODntjnv3IryevYP2fnYeKL2PyGaNoVJkCn5GBOBnoAQT9cCs8R/D+780VR+
P7/yPpQgHkgce1fP37RbW7alpCbnF1HCzbdvylGPXPrlf1+mfoOvnD4/2xHiWG4m
nyzQqII8nhB94enU5/yKiTSnG/f9GXG7jL0/VHjB60UHrRXUc5e0mJJtUtkljMkW
8GRAcZUcn9M19t6VbpbaXbRqzNiJQGYgk8etfEFhJJFewvG+19wAPpnivtjw2jxe
GNLik2+ZFaRIxXOCQoBxmuaov3yfkbwf7trzNSopJ4onRZJEVnOFDHGTisvxFfap
ZWSHR7EXly8gUoWwEXB+bn3A/OuZ0nwnqpvhe6lfTTuWZnDnABPpz0zXNXxMoS5K
ceZ/gb0qMZLmnKyO+IDD1FYniHS4LnSrk+QGypaQL1Ixzj3rVtUaK2VGcsVGNxrF
8c38mmeC9VuYZdkwgKoQcHJ4498Z/wA81deMalF8y6EUpONRcr6nxzq1wlzfySRL
tj6IMc496oVYvIjDdOhQoM5A9qr12wSUUkc023J3Fr6P+AF5cXGjXaTQHaCoSfPD
BRgJj2zn/gVfN9e+fs+tbRm4jG9rmSNpCRJgBQwXG3uenPvWGJ+y/NGtHXmXke9D
pRTXG6NlHcY4rm7nTb2WC6iVpds+Gfcx7Y4H5dKxr1pU17sbmlKmpvWVjphyMiuV
+ItybH4fa3Kghy1s6FZfusGGCPqQTWO3hvWksdQhgupYY5EKRBXI3cHB4OVrjPF2
ialo/wALLpb+4mS5eVQRI28sM5POTj6/41yLGVJpRdNq+np57f5HR9WhFtqd7Hz+
eprXt/8AUR+6gc/5/wAisc9a1o/+PVCOTtH8q92B5bLcUib0ZvunqD6e1d/4ej8O
3MUazIySHHJAwT+debq+5gAOvGK1LG68oghsr3BrWLIaue/6F4a0N2WW2SJ5cduK
6ua3t9P017iUAIo4H+fxrw3RNZuIFWSKV0PbnvXT3fiq9vdLFs0gbJ5wQM88/wBK
0a7GXLcs3fiT7PbTTBipbITJ689etchruoSX9pb3Jyr7ymB1rK8Ramz6iIlyNvG0
D/PFF1dQaNZWst+HbzDvSMZzjjn2olKxSieo6bp89noUdwVZQVB3etaum6vlNrMM
rVHRfGGk+JvDwhs5BHJHFjymIBz0rlS9xFqDeXuIGSP5VSldGbjrqdjfXpmuPJST
jHAHesXxPpNxDpE12IyCi5FVvDjvc6wxuCFK/dJ9P8/yrY8feNtG0zSG0+eQSzyI
QEjGcf0pN2QWd7Hm1jfT6Za280bgyyHcQeOAeP8AJr2fwzq9nr2ixvKN0oIyvQ14
K8putLju7fd5K5Ax1Bz0zXS+BdfktLuNVYlW6YOR/n/Cp3NHHQ9wbRbWVNpiBQrj
Fclrnhzw/bQO1yEiQHJzzj8qq6340vYSYo2VVIyG9K838Qa5c3cZaeV39cn/AApK
LWrEkVPFM/h2I7LCNnYfxEACuGYh2OAVDenfn/69WL6UyMSS2fcVUX06nbxyDUyd
zVDWwWyTzgUUOSGOOnbiioGPVhtHPSkICN9D/n8aaRtbuP6UvcnB3AdKGBPG3zgZ
wPb8K7C2uh9jReAdvPFcYr5+buSAe/8An+ddBazEwIeq4C89q0puwmaMd27SGMOF
K5IPp6c1S8P6S2r62yOcKCT+Oar2sjHWfLOcSfLwfWrenXE+jeJInzkeZhh9ap6i
2RJ4ssGstUWz1GMugUbJFPOKqf2DpTWYlt7p0uFGQQGIrf8AiVdC9aCZM5dQM/kK
zvCOntqlpqMLMN0MRdeai2o76HqPw1kt00eSK41S3llSNvlkcZH51554gsoNU8TT
Qyat5lpndtjYkY5HbjPFZFpoOo2/7+3lkjWbKKQeDntV7w54dng1l4bncGCE89R9
arUnRMx73T9K0qdmhD3BBwoYEYOfQ12Vv4butS8LNqF2SihCY4yeBxxx0rhNVWT+
3HAYsPMxx25r0TXtaltPBVrbxja7qA3tUob8jl/DBkjvZEI5CNnnjtU7XJuLp/Mb
I3Yxjj8Kh0dXttMvLx+MLtz6E/8A6qx7O5Lkvkncc8849K0TsTYta5MuFIYcjHXo
K5x2Dd/w/Wr2oztNMMAFRxj+dZ/3jyevJNZzldmiQD/aJyeTmoL4ERAYPBHB7das
jkA4xxkg8j/9XAqtfgqi59azlsM+g/gL4euLfw+Nca+dra6DIlqM4UqxBY+/H+e3
sleffBy8t7r4eaelsUEUMYjKKOVk535+rZb8a7DXdXh0HRLzVJ45ZY7eMuUiGWb0
AFefTkuVz21Z1TT5lH0L7MqjLEAe5qIXdsZUiE8XmOCUTeMsB1wO9fJOtfE7xHqH
iW/1ODULiCKbfFFblvliiJJUYHG4A9euatfDLWbiTx/YPer9sLttVpZMFCeMj1PO
Me9FR1YRc7Ky8wgoSajfU+s+1ea/GXxBYaN4bit7tFlmvRKkMLKCGwvJPsCV/OvS
q+dP2hp7h9c06KSCZIERjE7/AHHPG4r+gP4cDqSrBVEoPZv/AIP6BTk4PnXQ8VPU
0lFFdhzGv4Yna38S6ZIrbT9pQZ+pAr6p8K6Dtvk1Scf6TEm0En1Bz+OK+XPCE9tb
eLNLluw5gW4Xdsxkc4BH44r7N061W0tFRc/ia8vEUPaYuEmvhR30a3JhpRXVliZP
NhdA23cMZHavJrJb7w9qGrXzTxQxvdsjeUGAYBiE4Pfk59ya9dqve2NrqNs1vdwJ
NCxGUYZGRyKeMwrrpOMrNf18gw2IVJvmV0yvot1LfaRb3M2PMkTJxWR4qtoobeO/
aNSYZd2cZYE8cV0UEEVrAkMK7I0GFUdhTLuGOa3ZZUDKvOD6inWw7qYf2cnrbfzF
TrKFbnS0ufL/AMT4jJLPeBtolmBKMMYwAMCvMa9P+MbyNrsLB41iKFfLXqTuJz9M
ECvMD1q8sT+rR1uTjmvbuyCvRPg6+oHxzZ29hLFGZDmQyoSGRfmYAjoSBXnde6/s
92Nk95fXTJ5tyiDBIz5JOR+GRn6810Ym3JZ9WkY0b8110PoEdKbkMSMgkdRS9R9a
8A1/xdqPgL4rzXFy0mo2MzHZbhymwHapIBJGcD2BOenNZTnKMkkr3LhBNNt7H0BW
brGqpplsSAHlbhUzz9cVNpep22sadFfWjFoZRkbhgg9CCPUGkv7CG6gkJjBkxw2O
eO1TXc5Um6L1toOlyqovaLQ+f/GC3XiC2uLhpQk/yh2xhCB6+3+FeLupV2U9QcGv
o7xjpZ07wNqss9s5cREtv6kkjB49CQa+cT1NcuTubpy5+50Zkoc8eXsJXd/CORP+
FhabDJ5a+YzMsjDlGVWYEds8Y59a4Sui8D3k1j4y0yaAsH8zb8ozkMCD/OvSxKXs
Z37M4qH8SPqfaa8qOc8dfWvIfjxEs2hWscaJJePKqxKQCVGedvoemTXrNoc2UBxj
Ma8enFeafEPStU17xJp8FtD5VrCrCSZ1yrjjPP8AId+a48TUUacZeaf6nTQhebj6
nmHgnR51S1kdQIi2W2rncM5xx/P3r6Zswv2KDZjb5akAdhivP/D/AIUa1kjR0dQp
yRtCjH0r0SJBHEkajCqAAPpXLgHUqVJ1ZqyexvjFCEI04u7R578aNck0fwJMsGPO
uXEIJj3BQQcnP8Jx0PtXycetfRH7QVzfJpNtAWX7FLKMIqZJYDqW7dTx7187nrXq
Yd35pedvu/r8TgrKyivL8wp6nBB9KZTh1FdBifavgt55fCWnz3URhuJIlaRCeAcD
oO30rddFkQq6hlPUEV5z8E9T/tHwEipLNIlpMbYedglSFViB/s/Px6dK2/iH4qk8
KeGJrm3jY3UwMcLgZER2k7j64xnHeuGFoUkpLbQ6pXnUdup1UcUcKBI0CqBgACsX
xlJaJ4P1ZL53jtprWSGR0QsVDqVzx25r5OtPiD4rsbV7e312+RXcsW80ljkYxk/5
Haku/H3im90xNOudbu5bVUePYX+8jDBViOWH1zWvs6jjZJL5/wDAI5oc13dnNOu1
2XIOCRkdDTaD1orpMAr0D4ReILrRPGlrDAu+O9dIZFZ8DGfocnrj615/Xa/CzTZ9
T8e6XHbxK7QXEdy5LAbUjcMx5rKuk6bTNKTtNM+vkbdGGI25GcHqK+ZfjvrY1PxP
aWyq4FvESob3OMj67RX05XzV8bvDrWmv3OqtI7CRkWJecKhGfyzkD61zzfLUhzPS
/wCNtDaKvCVt7fgeP0UHqaK7TlLmm+UNRtzPEs0W8b4yxG4dxwQa+0vDF6dQ8OWV
wylC0Y+UkEqOw49q+Ix0r7U8GADwrYjauREgMi/8tPlHzfjXJV0rw13T/Q6KetKS
81+pv45zjmlrgfi/qWtaX4JefRnmjYzBbh4VyyRbWycnoMgc1kfCf4knxNp0thqY
jhvYJFSN93+vDA9vUYP4Yoc7PXbuChdabnqbuqKSxAFcb4w11X057SyUTSFGY+3B
/r/WuyZVcYZQw965LX9MjsLeSSzhCmQ7R6An6/yrhzJ1VRfJa3XudWBVN1Fzb9D5
R8RwJDq8gR9xPLgfwt3FYx61oaxLPLq921xjzRKysMYxg4xWeeterRTVOKfY4arT
m2gr6a+BuhSaZ4ajv1CkXy75g4+ZeTtx7EY4r5nHHNfX/wANvENhq/huwtreWF7m
3tIkl2MGO5VUNnHfOPzrHE/FBN21/pGlH4ZNLodrTHkjiBLuqjuWOMUk2fIk2/e2
nFeQXmk6pA8umqLowSPmPzZ9zZHXJJ6e1cuMxn1e1o3ub4bDe2vrax639ttdrsLm
EhPvYfOK8y+MF5b6j4aNvp+pwfa4GBktsKxlRl6c9D0NZOmeErn+3J5WhYRzRklg
epHXr+NZ194amW21OZp2laEMMyKQGIGeCTXnzzJztFx00OyOBUNb66ngx4JrUg5t
0B5+XP6YrNl4lYbSvJ4PWr0fESH1UV9NA8Rk23ax/oKlRsEAZ/EkAd6h+8RnGB1H
p9Pzp6EcMOgH61ZJ2elyKunoDnI4qVL0iTan38/Kc9ax7CUC2QEY4I4oa62apEpJ
weO/WuhPQixFKk2qa+Y0zvdvy71o+KreSUW1nfny5okwjnptzUFtdPpfiFJ3TI3j
LH06V1vxHlt7rSrO5jAJVe55zWbQ76nFad4f1e0X7bp94Fdefl43V6v8Nft2sKG1
O2y6EjePTFeXeF4ptTme1AO8Rlhx6A1Z0vWvEWh6o0lnPIqKxGwNgemKS8gaudT4
yl1iw1ySy0uEQLKc+Z3/AM81weo+G76G5aTVL4HPLOxyTxWha3Osaz4iSS+mld2Y
7S5Jxnt/KqXiYyQam9sVCrwG+tOTuCRv6PZzapoTWmnRkWqnLSHrn61m+HZGt9XS
Nhgq5HPPY13Oh6rBpHw+MqhVdhtOByTXF6FIbrVZLtlwFyx/I9fzpoTNS/1B5rxk
Gfl4yT3rH1natsOpAHPv9KrG9M19K+QQWIyP8fzFVdWu9yqhLEdW74q3JWBIypju
J7jp9P8AP+NQcnnjpTm+8PwwSf1/OlGMZ6jGCAMH8awLGE5JI/nRS7G9R+JorO6F
8wXGMZ68UcYxnj096U4VB6EUEHsRjsMe9aDAkkknOSPzra0wtLYuiDLpk49R1FYn
QnGM5+taejXQtbomQfIflYc8UIGWCWN5DKi4II2nPpXVa/pf2ixtdVtBnIAmwOhx
VDTLBbrUlhX7rEgcV1NyJvDaCG6jL2M3ykEZ/H9K2toZ31OM1+8W90e2VTl4+D78
1oeB0eHTtTuEfbiEgHuf8/1pmu+HGeH7fphM1o3zlU52+xxUOiO0HhXWWGVkRRgH
sM1GzK6HXy6mLPR9KUqAvmBzj1xV+4Mba4lyNqie3B2jj1rz7xBqyxWelrCGbMY3
A9+K2lvEuNY0RdxG+I7+cd+lVzIjlZxd+hj16ZQOfP4J9j1rptUlm1mSytoBub5E
ABzjnk1kajp1ze+KL2K1iaQiZtpUZ7+1dvEtn4Qs4XlcT6tIoCgH/VtU7svYyfFU
celaNb6ZAQJNu6bb36cfpXFQRske/A6dO2a9B1nQbu40ttRuASznJJrg71xFB5I6
mhoEzOZ/NkJznnv/AJ/rSAAk88dfz/lTQvA7jvxSkHGTxng8Y5qLFAv3v4ie+eea
rXxzGvrkZ+uKsL06rkd+vH8vSq19/q1+o/rUy2Gj6C/Z5bd4ZvgI1TZcYLA/6zjP
PuP5Yr1PXbe2u9Gmtror5cuFG84BOcj9R+lfI/hPxvqXhUyLb3FwLd0IMcUmz5ux
/M1H4i8da/4lvLea+1Ccrbf8e6BsCM+vGMt7nmvOdKcuenbR319fxOv2kFyzvqra
ehR8VQpbeLdXt41CpDeSxqB0wrEZ/SneFHlj8WaS8EbySrdRlVjODndWNJI0sryO
xZ3YsxPcmrulalPpN9HeW5xKhyD3H0rolB+ycFvaxjGS9pzPufckXESjcW4A3Hqa
8m+P0kEXhW0LqjzPK6IrHBAIGWB9uBj39q4AfHrxEuly23kxPcSKdtycKYyfRQMH
HY9a4rXPHWv+IbSO01K8NxBGmxVdQTweCT1J96x5JzSTj269nfoa80Yu9+5zJ60U
HrRXWcx13w50m51jxlYW9uhI8wF5QufJA53j0Ixx719jqMDivibw14o1Lwrfm802
RVc4DB1yCK7DSvjX4nsL5Zbi5e7tsEPDIw5yc5Bxx3rknGoqjko3XqdEXBwUW7Hq
/wAWPiTeeDDb2WmGIX82JMSJuHlYYE/XcB+RrznRPjtr2n2t1FqH+nSPtaCRwB5Z
7ggYyCPyrhvGPiu48Y602qXUSxykbAq9lH3R79TzXN1UKN43ne/rt9wpVLO0bW9D
6h+GPxPufHGv39pdW/kMkImiiTBRFBCn5upJLD9a9UPIwQORXxH4c8R6h4X1I3+m
uqTmMxksucqcE/yFdvqfxr8SXNoIbC7kt3kiEc0hVSwPI+Q9uvUYP41LjOEuWMbp
9bjvGUeZuz7WD4z6XNb+IBdBJmt1JgEjrwDyQoP/AH0fzry89at3eoXt/IXvLu4u
HJ3FppC5J9ck1U71rh6TpU1BvYivUVSbkgr2z9nqaG21PU3aZvNmWOJYd2ARkndj
uR09sn1rxOuo8J+OtW8Gx3g0tLQtdKAXmh3NGRnBU5HPPfI9qdaMpRtDfT8xUpRj
K8tj7NbgE18jfF68e5+JOrIbgTRROqpjonyLlfqDx+FUp/iV4ruL2S6fVpQ74yq4
CjAxwOgz3rmby8lvblp5du89cDGaiEJ895JW9f8AgFSlHktF6npnwv8AiXrGjarF
pMoN/b3s0aKs85HlYyDt65JB6dyBX1ApJUEjBx09K+D4JXt545ozh42DKfcc13ek
fGDxdpU8bSX7XcKEsYZcbWznqcZxz0olTlGV4LTt/l/SGpxkveep7t8XpRb+CLxk
nEU0gCIM4LncOB/I+1fJTfeP1r0rWPjLrXiHQrnS9Vs7NlljZVmgVkYE+uSQelea
HqaVCEoym2rXt+QVZJxik72uFdZ8ObW3vPG2nQXAcqzgqyKSVYEEHp2x/wDq61yd
XtM1S80e+ivbGYw3MRyjgA4P41rWg6lOUF1RFKShNSfQ+5Q6BcbhhRyR2pSqt1AI
69K+K5PGXiSWVZZdZvHdHMilpScMc5OPfPPrx6CtDTfiZ4x0uRXg1+9k7FLiUzKR
6YbOPwwazUKnVL7/APgFc0OjZ9jY71S1DU7LSrdprydI0VS2CeSB1r5ni+PHjKMM
rPZSIVx88PzD1III5/TpXMeKfH2ueLp4ptRljVo42jHkrtyrdc1MlVatFW83/wAO
UnBaydzo/i54xj8TatD9kuFktRGvyo2VGCcH0zyfwrzI9aD1NFbUqfs48t7mVSfP
K+wU5eo64ptPRyjKy9VORxWhB9VfBixktPCU0ghkhtriUSRI67SflAJx74HPfFb3
xE8hfCF1NcrCYYgWPmx7wDtIHyjr16f/AK68D8PfHDxTowihufst/aIf9XLGEYLj
orLjH4g1d8Y/G+98R2yWmn6ZHZwAtuMr+Yz8YBGANvU8c9ua8+dCo6Lp2u/Xz7nZ
GrFVVPoeSyY8xsYxk4x0ptB60V6BxhRRRQAV3Hwmga4+I2lKHlREfe/lOVZgOg46
gnGR6Z7Vw9amh65eeH79b7TzGtyoIR3QMUz3GehrOrGUoNR3LptKab2PuKvAf2hb
qe1u9PtY2xBeRmSTkglk4/LB6Vxdz8Z/GsqxiLVDCVxkrGh3EHg8j8Md++TXKeIv
E+seKr9b3Wrw3NwieWrbFQKoJOAFAHUmsvZObi5rZ3/M09pyJqL3VjGPWiiiukwL
NikUl7CkxIiZwHI647496+1fDEU8XhyyW4aNn8pSDH90rj5f0xXxPbym3njmXqhB
r2K7/aAvxpVjaaZo8drJCUWZ5J/M3ooxhcAYz684rnqQk6imleyf6G8JRUHF9z2L
4jTSQeB9SkjIwkLvKhGfMjAO5efUcfTNfJega3ceH9ah1K2GXiJ+UkgHIIPT610+
ufFzxX4gtHtbq7gjt3jaOSKKEAOrDBznJrgj1pQpNuXOtJW0CVSyjyvVH254U1NN
Y8Ladfo4cTQI/BzjIBwfcdDWjcw290vky7WJOQD6j/8AXXyJpPxO8W6LpEem2Gqm
K2jXag8pSVGOACR26j/69Z1p418R2UTJBrF2hZxJ5m/L55PDHnqaj2VTkULJ9NX0
+4r2kOZyu/uOq+L3hzTNB1wNY+ess80rSrIuF5II2+vU/pXmp6mtnXfFGseJmt21
e8a6e3VljZgAcE5OcDr/AIVinrW1CnKnTUZO5nWmpyugr3D9nayY6nq17k8RJEuD
wMnJyP8AgI614fW/ofjLX/Ddu8Gj6lJaJI25tgXk8eo9qdaMpRtHuhUpRi7yPtZg
CMHpUQgiQ79iZX+IjJr5Yn+NvjKS2tUivkhlhi8uSQRq3mnsxByN3TOOPwOK57Uf
H/ijU9Uj1C41i4+0RK0cRQhdiMcleMZHA6+grPkm9eVF80V1PstUjABULjrxWdrd
vbvo88DQK6lW2qFBw2DyPfNfKunfFTxdp1pBbJqsrxW5ZoQwHBOfvcZYc8Bsgcdq
3ofjZrU2l3tnqBLNPGESWPIZeDkg5GDnHTt+dZVoVHBx5enkaUnBST5jypjliTjJ
PatGI5hUnso/lWcxyxPvWlCuIEY+nB/CvQgcbH4IIAGewI/zzQCMjH0xSEccqT3z
/n60fmQPStBGxpLb7eVeCQfTHGBRcuGeKVSd3B5FQaLcLDfozZCHhjj39a2hYrJe
+SBuDPkDNXHXQl6GjrenGfSrXVo0yrAK6+lRavdC68JoGI8yMkEegxXR2f8AxKrU
2Wox5tphjceNue9cx4h0e409WaA+baS8q3XFOSEg+HzSJr7TqCSsTH2xiusi+xjw
9NPLGBNLcAg8/L81cp4KkMMuoOhA8uBm578VYvNUEPg+0kdhtlckoOoOaExNXOwu
7W2XVdOuraMBHQ5OOARj/wCvXmnixmPiO7V23ANnAH5V1Z1WQ6To0kUv3pSg98gV
zXjGIr4mljPJwrZ/AUSsEU7mxqd8v/CK21vHxlcuBUy2P9i+FXunX9/cjYqH+7z+
lT+H9D86wj1PVmEFovKhjjdj0qTXzNrsT3UMRW1j+4ozgCkkU2efW5YOzDO0k5z2
5qK4lMkhxyQePrWgyLbQvnG7OAax8sSWOSWP51MhoXHznH14P9e1Ifl44NLk5HU9
RnPHTrTM7vqeOn5VNhiheOXC+xBophQE5259yKKjQB/vnk55znvQgJIPI560oUnH
vg8jrSop5B/iHGRwa0ARhn1wegHTinw4LAgYznt/KkVSVAyCT16/WlII57ADnpTQ
He/D2KS81JQy52MCDnjivSfiHqNhb+HfsZjDXEuPmx0wK868LajDoOn/AGl8eY/3
VwDn3NUvEWvPqP71/mc+/Q961exklrco2GtXmj3H7hh5J6qxzuHt+FWp9at9T0+/
fyRbh1AdRznmodP+xzptzlx1yf8AGi50pGSQQZ2yj5jjP5VkamXHDbag0SNdhRCu
B78Yq/aTW0eqQZnLSQ/KuB1Gev8AP86iXwfeE7lZTjoMdf8APNJ/wj9xZTrLI+4r
7UrgXx4rntJLlLSBEkeZj5nU9e1Q2N4z6xBcX5aUFwTnmnRWEEGZZRueQlm3HPWq
N1cQLcKEY4B+YVSYNaHt+vmC/wBAjNqo8ryslQe4/wD11883+43socsFVjivStF8
U/ZrQWczboXHBz0/zmuH8RwLHqzuhyrnIP1H/wBereqMoKzMjBYZxnnoef8APJ/z
mnFeBjIw2PT8qBySAMMenOMVIMd+nQCslobEP3VHOeCcen/1qqX3+qUnrkdvqKtu
GLDPUjr1Pf8ASqN/1T8e1TIEU6KKKzGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAF
FFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAF
FFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAVpxf6i
P0AH8qzK04smBMAn5R0PTjmrgJjsHO3oemKc4yeMYx3NCjDEEce+P8/hTgGKncD1
9KsQRf6wMD7V1fhZ2vdRigOSy4xxXKfd29mPPPfmu58BpHDdG9mICLySePyrSnuT
PY9Y8RaTpj+EpJbvahEfyAcEtmvItN8RSaYxs7lPtVqxx5ZXIA9v/rV0Xi/xQup2
3lpIVhXt64rjrWzW8jDNIADyAOKJigjZhm0lJ7uTSiR5sDBkHGOPeuXe2uLvT7ay
QLIY2/TNX30xrJ5Hib5JFK4Hqe9ZMen6nDIGSOUEdSDnIqC7GtHHcRpZQOVT7O5c
jIH+f/r1sXGpaRHrVzdXytPOoUInUZ21yhtdQaeOWVWABznPatAaa11cyXErbY2I
GMH0/wDrUBY0dR8QXGuzxQyEQ2gICxqSFUV6u+n2tv4RiS22yeYmN2Mkcf5/WvFb
uFLZQAVIz64r0Dwz4kSKx+w3b8YwrE4AP/6q0izOafQ8w1x2GoyWy4+ViAazwMjj
H5dT+P0Nb/i+1EOsvIgASQ7hgdRWCMDgnA6YIqJrUuOwhH7tsdepz1/zj+dNIbnB
65A/Pmp1+br14zUUnQ8dPX/PtUsZE33jjOM0UP8AfP19aKizCw8ONgBAJA6H/P40
4glsFceoz17UUVQxV5AHY9D9COn61MibjlsFeuMUUU+onsWZZprlQM4CL29KgJ3L
yxx0/pRRRJsaEQSLIuwlTkDk5q/bX13HnbITxwDRRSYi7/wk9/CqoNo9v1qtc69q
FynzuBz/AAjFFFNa6jM6a7mmYF3bvnB4PbH51EG3E8ZI9+lFFAIl+0Oo2g4xk+mP
enS3UtyqxuNzA9+3+eKKKdwsRiPkYHPamMCGGO56frRRQLyIJDtZD/s59ap33WPj
t/hRRUT2GU6KKKzGFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUA
FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUA
FFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAVqwbTbpk4wBk4ooqogSZG
MrzjHboetKCAOvOODjr3z+Yooq+okrkoBJIwQD1OehrRF+8NilrAxwPvZ6NRRVp2
FuQNczSJsZuO9RQ3M1tIGR8NjkD/AD7iiipbdw2NaDWpS5EsYYdSf1rUt/FNtDCA
YMntxj2/mKKKSKSTIL3xRbzRvstiCOMt/n3rKm1mZ1VYVVRnABH+feiijoLYz5Jn
nclnJPTNWY754oVw5wvIPpRRVJkjr3URe2uJgdycA/5+tUTHj5skdTkUUUNjQSE5
xnOSBj0zTGbg9uDx7ZooqWMiYfMQVPH+3j+hooopWIuf/9k=

------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=b7.gif
Content-Type: image/gif; name=b7.gif
Content-Location: http://top100-images.rambler.ru/top100/b7.gif
Content-Transfer-Encoding: Base64

R0lGODlhWAAfAJH/AP////+ZAAAAAAAAACwAAAAAWAAfAAAC+IyPqcvtD5+YtNqL
s968Z+NhoDCG5umV6Kii7ju1JxIHpH3jeW6DPt4LwmQm2u1I+VVYQqXxRSzqlDxk
rXbgBXVQrktFc3KZR3E05Z2lkT7stdy7Ur9rmP2ujuj3/L7/DxgoGLjEhwUkMTgY
cwhx2LigpdjHaEUEhpgERMIJOSnRabQZWjk6+vbpVzhW2kq61OiZ2uBqWlubJSk7
q1C6aduJylq1y2t8jJysXIfX7HxxttFLTA1d8lS9wtxxnQmnQcbmTWfXLWxlfS4+
tM1hvn4WLt8OTl+vKRw9r07Ojr/uztu+LuXG5EL3YcrBbGqeOXxoYZlEPwUAADs=

------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=top100.js
Content-Type: application/x-javascript; charset=windows-1251; name=top100.js
Content-Location: http://counter.rambler.ru/top100.jcn?1978219
Content-Transfer-Encoding: Base64

dmFyIHRvcDEwMGltZz1uZXcgSW1hZ2UoKTsgdG9wMTAwaW1nLnNyYyA9ICJodHRw
Oi8vY291bnRlci5yYW1ibGVyLnJ1L3RvcDEwMC5zY24/MTk3ODIxOSZybj0iK01h
dGgucmFuZG9tKCkrIiZyZj0iK2VzY2FwZShkb2N1bWVudC5yZWZlcnJlcik7Cg==

------------bClPnHm6ovxBc9IieYYwoG
Content-Disposition: inline; filename=snow.htm
Content-Type: text/html; charset=windows-1251; name=snow.htm
Content-Location: http://hardfire.far.ru/hv2/templates/js/snow.js
Content-Transfer-Encoding: 8bit

<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<title>Webservis.RU - ERROR.</title>
<link rel="stylesheet" href="http://www.centre.ru/css.css" type="text/css">
</head>

<body vlink="#E23817" link="#E23817" bgcolor="#1A4216" leftmargin="0" topmargin="0" text="#FFFFFF" alink="#E23817">

<table width="100%" height="100%" border="0" cellspacing="0" cellpadding="0">
	<tr>
		<td align="left" class="td_top">&nbsp;
		<a href="http://www.centre.ru/index.html"><img height="50" src="http://www.centre.ru/img/logo.gif" width="208" border="0"></a></td>
	</tr>
	<tr>
		<td align="center" height="100%" bgcolor="#A9BF4E">

		<table border="0" cellspacing="0" cellpadding="0" id="table5">
<tr>
				<td class="td_arow_top_left"></td>
				<td class="arow_bg_top"></td>
				<td class="td_arow_top_right"></td>
			</tr>
			<tr>
				<td class="arow_bg_left"></td>
				<td bgcolor="#E3EFB1">
				<div align="center">
					<table width="610" border="0" cellpadding="10" cellspacing="0" id="table6">
						<tr>
							<td bgcolor="#E3EFB1" width="305" valign="top">
							<font style="font-size: 12px; font-family: Tahoma">
Дилинговый центр"<strong>Pro Finance Group Inc</strong>." предлагает круглосуточную торговлю на рынке <strong>Forex (Форекс)</strong> в режиме онлайн через сеть Интернет (Интернет трейдинг) или через телефонный деск. Хеджирование валютных рисков. Управление капиталом. Качественная аналитическая поддержка клиентов компании, помощь в разработке стратегии Forex и <strong>профессиональное обучение Forex</strong>. Обеспечение рыночными котировками Форекс в режиме реального времени и <strong>круглосуточной технической поддержкой</strong>.<br/> 
<br><center><a title="forex" target="_blank" href="http://www.pfgfx.ru/"><strong>www.pfgfx.ru</strong></a></center></font>
							</td>
							<td bgcolor="#E3EFB1" width="305" valign="top">
							<font style="font-size: 12px; font-family: Tahoma">
Хостинг компания "<strong>Centre.RU</strong>" обслуживает более 30 000 доменов второго и третьего уровня, число наших клиентов постоянно увеличивается.
Одним из основных направлений нашей деятельности, является предоставление качественного платного хостинга сайтов.<br/>
<strong>Качество хостинга, проверено временем! Centre.RU - 11 лет!</strong><br/><br>
При оформлении хостинга по любому тарифному плану.
Вы получаете <strong>домен</strong> в зоне RU или COM, NET, ORG, BIZ, INFO в подарок.<br><br>
<a title="хостинг" target="_blank" href="http://www.centre.ru/">
<center><strong>www.centre.ru</strong></center></a></font>
							</td>
						</tr>
						</table>
				</div>
				</td>
				<td class="arow_bg_right"></td>
			</tr>
			<tr>
				<td class="td_arow_down_left"></td>
				<td class="arow_bg_down"></td>
				<td class="td_arow_down_right"></td>
			</tr>
			<tr>
			<td height="10"></td>
			</tr>

			<tr>
				<td class="td_arow_top_left"></td>
				<td class="arow_bg_top"></td>
				<td class="td_arow_top_right"></td>
			</tr>
			<tr>
				<td class="arow_bg_left"></td>
				<td bgcolor="#E3EFB1">
				<div align="center">
					<table width="610" border="0" cellpadding="10" cellspacing="0" id="table6">
						<tr>
							<td bgcolor="#E3EFB1">
							<div align="center"><font style="font-size: 35px; font-family: Tahoma; color: #E23817">
							<b>Ошибка
							<br>
							</b></font>
							<font style="font-size: 22px; font-family: Tahoma">Неверный 
							запрос!</font><p>
							<!--<font style="font-size: 11px; font-family: Tahoma">Через 
							3 секунды Вы попадете на гл<span lang="ru">а</span>вную 
							страницу сервера<br>
							<br>
							Если Ваш броузер не поддерживает автоматический редирект,<br>
							нажмите на следующий линк <b>-->
							<a href="http://www.webservis.ru" title="Бесплатный хостинг"><font style="font-size: 18px; font-family: Tahoma"><strong>Бесплатный хостинг Webservis.ru</strong></a></b></font></p></div>
							</td>
							<td width="240" height="60" bgcolor="#E23817" align="center">
							<b>
							<font style="font-size: 22px; font-family: Tahoma; color: #FFFFFF">Error:404 Not Found</font></b> </td>
						</tr>
						</table>
				</div>
				</td>
				<td class="arow_bg_right"></td>
			</tr>
			<tr>
				<td class="td_arow_down_left"></td>
				<td class="arow_bg_down"></td>
				<td class="td_arow_down_right"></td>
			</tr>
		</table>
		</td>
	</tr>
</table>

</body>

</html>

------------bClPnHm6ovxBc9IieYYwoG--
